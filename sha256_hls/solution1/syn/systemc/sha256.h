// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sha256_HH_
#define _sha256_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sha256_done.h"
#include "sha256_hash.h"
#include "sha256_sha256_buf.h"
#include "sha256_ctrl_bus_s_axi.h"
#include "sha256_INPUT_r_m_axi.h"
#include "sha256_OUTPUT_r_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_INPUT_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_INPUT_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_DATA_WIDTH = 32,
         unsigned int C_M_AXI_INPUT_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_INPUT_R_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_DATA_WIDTH = 32,
         unsigned int C_M_AXI_OUTPUT_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUTPUT_R_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_BUS_DATA_WIDTH = 32>
struct sha256 : public sc_module {
    // Port declarations 113
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_INPUT_r_AWVALID;
    sc_in< sc_logic > m_axi_INPUT_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ADDR_WIDTH> > m_axi_INPUT_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_AWID;
    sc_out< sc_lv<8> > m_axi_INPUT_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_INPUT_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_INPUT_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_INPUT_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_INPUT_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_INPUT_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_INPUT_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_INPUT_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_INPUT_R_AWUSER_WIDTH> > m_axi_INPUT_r_AWUSER;
    sc_out< sc_logic > m_axi_INPUT_r_WVALID;
    sc_in< sc_logic > m_axi_INPUT_r_WREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_R_DATA_WIDTH> > m_axi_INPUT_r_WDATA;
    sc_out< sc_uint<C_M_AXI_INPUT_R_DATA_WIDTH/8> > m_axi_INPUT_r_WSTRB;
    sc_out< sc_logic > m_axi_INPUT_r_WLAST;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_WID;
    sc_out< sc_uint<C_M_AXI_INPUT_R_WUSER_WIDTH> > m_axi_INPUT_r_WUSER;
    sc_out< sc_logic > m_axi_INPUT_r_ARVALID;
    sc_in< sc_logic > m_axi_INPUT_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ADDR_WIDTH> > m_axi_INPUT_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_ARID;
    sc_out< sc_lv<8> > m_axi_INPUT_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_INPUT_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_INPUT_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_INPUT_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_INPUT_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_INPUT_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_INPUT_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_INPUT_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_INPUT_R_ARUSER_WIDTH> > m_axi_INPUT_r_ARUSER;
    sc_in< sc_logic > m_axi_INPUT_r_RVALID;
    sc_out< sc_logic > m_axi_INPUT_r_RREADY;
    sc_in< sc_uint<C_M_AXI_INPUT_R_DATA_WIDTH> > m_axi_INPUT_r_RDATA;
    sc_in< sc_logic > m_axi_INPUT_r_RLAST;
    sc_in< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_RID;
    sc_in< sc_uint<C_M_AXI_INPUT_R_RUSER_WIDTH> > m_axi_INPUT_r_RUSER;
    sc_in< sc_lv<2> > m_axi_INPUT_r_RRESP;
    sc_in< sc_logic > m_axi_INPUT_r_BVALID;
    sc_out< sc_logic > m_axi_INPUT_r_BREADY;
    sc_in< sc_lv<2> > m_axi_INPUT_r_BRESP;
    sc_in< sc_uint<C_M_AXI_INPUT_R_ID_WIDTH> > m_axi_INPUT_r_BID;
    sc_in< sc_uint<C_M_AXI_INPUT_R_BUSER_WIDTH> > m_axi_INPUT_r_BUSER;
    sc_out< sc_logic > m_axi_OUTPUT_r_AWVALID;
    sc_in< sc_logic > m_axi_OUTPUT_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ADDR_WIDTH> > m_axi_OUTPUT_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_AWID;
    sc_out< sc_lv<8> > m_axi_OUTPUT_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_OUTPUT_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_OUTPUT_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_OUTPUT_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_OUTPUT_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_AWUSER_WIDTH> > m_axi_OUTPUT_r_AWUSER;
    sc_out< sc_logic > m_axi_OUTPUT_r_WVALID;
    sc_in< sc_logic > m_axi_OUTPUT_r_WREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_DATA_WIDTH> > m_axi_OUTPUT_r_WDATA;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_DATA_WIDTH/8> > m_axi_OUTPUT_r_WSTRB;
    sc_out< sc_logic > m_axi_OUTPUT_r_WLAST;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_WID;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_WUSER_WIDTH> > m_axi_OUTPUT_r_WUSER;
    sc_out< sc_logic > m_axi_OUTPUT_r_ARVALID;
    sc_in< sc_logic > m_axi_OUTPUT_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ADDR_WIDTH> > m_axi_OUTPUT_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_ARID;
    sc_out< sc_lv<8> > m_axi_OUTPUT_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_OUTPUT_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_OUTPUT_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_OUTPUT_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_OUTPUT_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_OUTPUT_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUTPUT_R_ARUSER_WIDTH> > m_axi_OUTPUT_r_ARUSER;
    sc_in< sc_logic > m_axi_OUTPUT_r_RVALID;
    sc_out< sc_logic > m_axi_OUTPUT_r_RREADY;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_DATA_WIDTH> > m_axi_OUTPUT_r_RDATA;
    sc_in< sc_logic > m_axi_OUTPUT_r_RLAST;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_RID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_RUSER_WIDTH> > m_axi_OUTPUT_r_RUSER;
    sc_in< sc_lv<2> > m_axi_OUTPUT_r_RRESP;
    sc_in< sc_logic > m_axi_OUTPUT_r_BVALID;
    sc_out< sc_logic > m_axi_OUTPUT_r_BREADY;
    sc_in< sc_lv<2> > m_axi_OUTPUT_r_BRESP;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_ID_WIDTH> > m_axi_OUTPUT_r_BID;
    sc_in< sc_uint<C_M_AXI_OUTPUT_R_BUSER_WIDTH> > m_axi_OUTPUT_r_BUSER;
    sc_in< sc_logic > s_axi_ctrl_bus_AWVALID;
    sc_out< sc_logic > s_axi_ctrl_bus_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_ctrl_bus_AWADDR;
    sc_in< sc_logic > s_axi_ctrl_bus_WVALID;
    sc_out< sc_logic > s_axi_ctrl_bus_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_ctrl_bus_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH/8> > s_axi_ctrl_bus_WSTRB;
    sc_in< sc_logic > s_axi_ctrl_bus_ARVALID;
    sc_out< sc_logic > s_axi_ctrl_bus_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_BUS_ADDR_WIDTH> > s_axi_ctrl_bus_ARADDR;
    sc_out< sc_logic > s_axi_ctrl_bus_RVALID;
    sc_in< sc_logic > s_axi_ctrl_bus_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_BUS_DATA_WIDTH> > s_axi_ctrl_bus_RDATA;
    sc_out< sc_lv<2> > s_axi_ctrl_bus_RRESP;
    sc_out< sc_logic > s_axi_ctrl_bus_BVALID;
    sc_in< sc_logic > s_axi_ctrl_bus_BREADY;
    sc_out< sc_lv<2> > s_axi_ctrl_bus_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<8> > ap_var_for_const7;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const6;


    // Module declarations
    sha256(sc_module_name name);
    SC_HAS_PROCESS(sha256);

    ~sha256();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sha256_ctrl_bus_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>* sha256_ctrl_bus_s_axi_U;
    sha256_INPUT_r_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_INPUT_R_ID_WIDTH,C_M_AXI_INPUT_R_ADDR_WIDTH,C_M_AXI_INPUT_R_DATA_WIDTH,C_M_AXI_INPUT_R_AWUSER_WIDTH,C_M_AXI_INPUT_R_ARUSER_WIDTH,C_M_AXI_INPUT_R_WUSER_WIDTH,C_M_AXI_INPUT_R_RUSER_WIDTH,C_M_AXI_INPUT_R_BUSER_WIDTH,C_M_AXI_INPUT_R_USER_VALUE,C_M_AXI_INPUT_R_PROT_VALUE,C_M_AXI_INPUT_R_CACHE_VALUE>* sha256_INPUT_r_m_axi_U;
    sha256_OUTPUT_r_m_axi<0,8,32,5,16,16,16,16,C_M_AXI_OUTPUT_R_ID_WIDTH,C_M_AXI_OUTPUT_R_ADDR_WIDTH,C_M_AXI_OUTPUT_R_DATA_WIDTH,C_M_AXI_OUTPUT_R_AWUSER_WIDTH,C_M_AXI_OUTPUT_R_ARUSER_WIDTH,C_M_AXI_OUTPUT_R_WUSER_WIDTH,C_M_AXI_OUTPUT_R_RUSER_WIDTH,C_M_AXI_OUTPUT_R_BUSER_WIDTH,C_M_AXI_OUTPUT_R_USER_VALUE,C_M_AXI_OUTPUT_R_PROT_VALUE,C_M_AXI_OUTPUT_R_CACHE_VALUE>* sha256_OUTPUT_r_m_axi_U;
    sha256_sha256_buf* sha256_buf_U;
    sha256_done* grp_sha256_done_fu_114;
    sha256_hash* grp_sha256_hash_fu_135;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > msg;
    sc_signal< sc_lv<32> > msg_0_data_reg;
    sc_signal< sc_logic > msg_0_vld_reg;
    sc_signal< sc_logic > msg_0_ack_out;
    sc_signal< sc_lv<32> > len;
    sc_signal< sc_lv<32> > len_0_data_reg;
    sc_signal< sc_logic > len_0_vld_reg;
    sc_signal< sc_logic > len_0_ack_out;
    sc_signal< sc_lv<32> > hash;
    sc_signal< sc_lv<32> > hash_0_data_reg;
    sc_signal< sc_logic > hash_0_vld_reg;
    sc_signal< sc_logic > hash_0_ack_out;
    sc_signal< sc_logic > INPUT_r_AWREADY;
    sc_signal< sc_logic > INPUT_r_WREADY;
    sc_signal< sc_logic > INPUT_r_ARVALID;
    sc_signal< sc_logic > INPUT_r_ARREADY;
    sc_signal< sc_logic > INPUT_r_RVALID;
    sc_signal< sc_logic > INPUT_r_RREADY;
    sc_signal< sc_lv<8> > INPUT_r_RDATA;
    sc_signal< sc_logic > INPUT_r_RLAST;
    sc_signal< sc_lv<1> > INPUT_r_RID;
    sc_signal< sc_lv<1> > INPUT_r_RUSER;
    sc_signal< sc_lv<2> > INPUT_r_RRESP;
    sc_signal< sc_logic > INPUT_r_BVALID;
    sc_signal< sc_lv<2> > INPUT_r_BRESP;
    sc_signal< sc_lv<1> > INPUT_r_BID;
    sc_signal< sc_lv<1> > INPUT_r_BUSER;
    sc_signal< sc_logic > OUTPUT_r_AWVALID;
    sc_signal< sc_logic > OUTPUT_r_AWREADY;
    sc_signal< sc_logic > OUTPUT_r_WVALID;
    sc_signal< sc_logic > OUTPUT_r_WREADY;
    sc_signal< sc_logic > OUTPUT_r_ARREADY;
    sc_signal< sc_logic > OUTPUT_r_RVALID;
    sc_signal< sc_lv<8> > OUTPUT_r_RDATA;
    sc_signal< sc_logic > OUTPUT_r_RLAST;
    sc_signal< sc_lv<1> > OUTPUT_r_RID;
    sc_signal< sc_lv<1> > OUTPUT_r_RUSER;
    sc_signal< sc_lv<2> > OUTPUT_r_RRESP;
    sc_signal< sc_logic > OUTPUT_r_BVALID;
    sc_signal< sc_logic > OUTPUT_r_BREADY;
    sc_signal< sc_lv<2> > OUTPUT_r_BRESP;
    sc_signal< sc_lv<1> > OUTPUT_r_BID;
    sc_signal< sc_lv<1> > OUTPUT_r_BUSER;
    sc_signal< sc_lv<32> > hash_read_reg_207;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > len_read_reg_212;
    sc_signal< sc_lv<32> > msg_read_reg_217;
    sc_signal< sc_lv<6> > indvarinc_fu_146_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > sha256_bits_1_reg_230;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_ap_ready;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_ap_done;
    sc_signal< sc_lv<32> > sha256_len_0_reg_235;
    sc_signal< sc_lv<32> > sha256hash_0_reg_240;
    sc_signal< sc_lv<32> > sha256hash_1_reg_245;
    sc_signal< sc_lv<32> > sha256hash_2_reg_250;
    sc_signal< sc_lv<32> > sha256hash_3_reg_255;
    sc_signal< sc_lv<32> > sha256hash_4_reg_260;
    sc_signal< sc_lv<32> > sha256hash_5_reg_265;
    sc_signal< sc_lv<32> > sha256hash_6_reg_270;
    sc_signal< sc_lv<32> > sha256hash_7_reg_275;
    sc_signal< sc_lv<32> > sha256_bits_0_reg_280;
    sc_signal< sc_lv<6> > sha256_buf_address0;
    sc_signal< sc_logic > sha256_buf_ce0;
    sc_signal< sc_logic > sha256_buf_we0;
    sc_signal< sc_lv<8> > sha256_buf_d0;
    sc_signal< sc_lv<8> > sha256_buf_q0;
    sc_signal< sc_lv<6> > sha256_buf_address1;
    sc_signal< sc_logic > sha256_buf_ce1;
    sc_signal< sc_logic > sha256_buf_we1;
    sc_signal< sc_lv<8> > sha256_buf_q1;
    sc_signal< sc_logic > grp_sha256_done_fu_114_ap_start;
    sc_signal< sc_logic > grp_sha256_done_fu_114_ap_done;
    sc_signal< sc_logic > grp_sha256_done_fu_114_ap_idle;
    sc_signal< sc_logic > grp_sha256_done_fu_114_ap_ready;
    sc_signal< sc_lv<6> > grp_sha256_done_fu_114_sha256_buf_address0;
    sc_signal< sc_logic > grp_sha256_done_fu_114_sha256_buf_ce0;
    sc_signal< sc_logic > grp_sha256_done_fu_114_sha256_buf_we0;
    sc_signal< sc_lv<8> > grp_sha256_done_fu_114_sha256_buf_d0;
    sc_signal< sc_lv<6> > grp_sha256_done_fu_114_sha256_buf_address1;
    sc_signal< sc_logic > grp_sha256_done_fu_114_sha256_buf_ce1;
    sc_signal< sc_logic > grp_sha256_done_fu_114_sha256_buf_we1;
    sc_signal< sc_lv<8> > grp_sha256_done_fu_114_sha256_buf_d1;
    sc_signal< sc_logic > grp_sha256_done_fu_114_m_axi_hash_AWVALID;
    sc_signal< sc_lv<32> > grp_sha256_done_fu_114_m_axi_hash_AWADDR;
    sc_signal< sc_lv<1> > grp_sha256_done_fu_114_m_axi_hash_AWID;
    sc_signal< sc_lv<32> > grp_sha256_done_fu_114_m_axi_hash_AWLEN;
    sc_signal< sc_lv<3> > grp_sha256_done_fu_114_m_axi_hash_AWSIZE;
    sc_signal< sc_lv<2> > grp_sha256_done_fu_114_m_axi_hash_AWBURST;
    sc_signal< sc_lv<2> > grp_sha256_done_fu_114_m_axi_hash_AWLOCK;
    sc_signal< sc_lv<4> > grp_sha256_done_fu_114_m_axi_hash_AWCACHE;
    sc_signal< sc_lv<3> > grp_sha256_done_fu_114_m_axi_hash_AWPROT;
    sc_signal< sc_lv<4> > grp_sha256_done_fu_114_m_axi_hash_AWQOS;
    sc_signal< sc_lv<4> > grp_sha256_done_fu_114_m_axi_hash_AWREGION;
    sc_signal< sc_lv<1> > grp_sha256_done_fu_114_m_axi_hash_AWUSER;
    sc_signal< sc_logic > grp_sha256_done_fu_114_m_axi_hash_WVALID;
    sc_signal< sc_lv<8> > grp_sha256_done_fu_114_m_axi_hash_WDATA;
    sc_signal< sc_lv<1> > grp_sha256_done_fu_114_m_axi_hash_WSTRB;
    sc_signal< sc_logic > grp_sha256_done_fu_114_m_axi_hash_WLAST;
    sc_signal< sc_lv<1> > grp_sha256_done_fu_114_m_axi_hash_WID;
    sc_signal< sc_lv<1> > grp_sha256_done_fu_114_m_axi_hash_WUSER;
    sc_signal< sc_logic > grp_sha256_done_fu_114_m_axi_hash_ARVALID;
    sc_signal< sc_lv<32> > grp_sha256_done_fu_114_m_axi_hash_ARADDR;
    sc_signal< sc_lv<1> > grp_sha256_done_fu_114_m_axi_hash_ARID;
    sc_signal< sc_lv<32> > grp_sha256_done_fu_114_m_axi_hash_ARLEN;
    sc_signal< sc_lv<3> > grp_sha256_done_fu_114_m_axi_hash_ARSIZE;
    sc_signal< sc_lv<2> > grp_sha256_done_fu_114_m_axi_hash_ARBURST;
    sc_signal< sc_lv<2> > grp_sha256_done_fu_114_m_axi_hash_ARLOCK;
    sc_signal< sc_lv<4> > grp_sha256_done_fu_114_m_axi_hash_ARCACHE;
    sc_signal< sc_lv<3> > grp_sha256_done_fu_114_m_axi_hash_ARPROT;
    sc_signal< sc_lv<4> > grp_sha256_done_fu_114_m_axi_hash_ARQOS;
    sc_signal< sc_lv<4> > grp_sha256_done_fu_114_m_axi_hash_ARREGION;
    sc_signal< sc_lv<1> > grp_sha256_done_fu_114_m_axi_hash_ARUSER;
    sc_signal< sc_logic > grp_sha256_done_fu_114_m_axi_hash_RREADY;
    sc_signal< sc_logic > grp_sha256_done_fu_114_m_axi_hash_BREADY;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_ap_start;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_ap_idle;
    sc_signal< sc_lv<6> > grp_sha256_hash_fu_135_sha256_buf_address0;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_sha256_buf_ce0;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_sha256_buf_we0;
    sc_signal< sc_lv<8> > grp_sha256_hash_fu_135_sha256_buf_d0;
    sc_signal< sc_lv<6> > grp_sha256_hash_fu_135_sha256_buf_address1;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_sha256_buf_ce1;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_m_axi_data_AWVALID;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_m_axi_data_AWADDR;
    sc_signal< sc_lv<1> > grp_sha256_hash_fu_135_m_axi_data_AWID;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_m_axi_data_AWLEN;
    sc_signal< sc_lv<3> > grp_sha256_hash_fu_135_m_axi_data_AWSIZE;
    sc_signal< sc_lv<2> > grp_sha256_hash_fu_135_m_axi_data_AWBURST;
    sc_signal< sc_lv<2> > grp_sha256_hash_fu_135_m_axi_data_AWLOCK;
    sc_signal< sc_lv<4> > grp_sha256_hash_fu_135_m_axi_data_AWCACHE;
    sc_signal< sc_lv<3> > grp_sha256_hash_fu_135_m_axi_data_AWPROT;
    sc_signal< sc_lv<4> > grp_sha256_hash_fu_135_m_axi_data_AWQOS;
    sc_signal< sc_lv<4> > grp_sha256_hash_fu_135_m_axi_data_AWREGION;
    sc_signal< sc_lv<1> > grp_sha256_hash_fu_135_m_axi_data_AWUSER;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_m_axi_data_WVALID;
    sc_signal< sc_lv<8> > grp_sha256_hash_fu_135_m_axi_data_WDATA;
    sc_signal< sc_lv<1> > grp_sha256_hash_fu_135_m_axi_data_WSTRB;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_m_axi_data_WLAST;
    sc_signal< sc_lv<1> > grp_sha256_hash_fu_135_m_axi_data_WID;
    sc_signal< sc_lv<1> > grp_sha256_hash_fu_135_m_axi_data_WUSER;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_m_axi_data_ARVALID;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_m_axi_data_ARADDR;
    sc_signal< sc_lv<1> > grp_sha256_hash_fu_135_m_axi_data_ARID;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_m_axi_data_ARLEN;
    sc_signal< sc_lv<3> > grp_sha256_hash_fu_135_m_axi_data_ARSIZE;
    sc_signal< sc_lv<2> > grp_sha256_hash_fu_135_m_axi_data_ARBURST;
    sc_signal< sc_lv<2> > grp_sha256_hash_fu_135_m_axi_data_ARLOCK;
    sc_signal< sc_lv<4> > grp_sha256_hash_fu_135_m_axi_data_ARCACHE;
    sc_signal< sc_lv<3> > grp_sha256_hash_fu_135_m_axi_data_ARPROT;
    sc_signal< sc_lv<4> > grp_sha256_hash_fu_135_m_axi_data_ARQOS;
    sc_signal< sc_lv<4> > grp_sha256_hash_fu_135_m_axi_data_ARREGION;
    sc_signal< sc_lv<1> > grp_sha256_hash_fu_135_m_axi_data_ARUSER;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_m_axi_data_RREADY;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_m_axi_data_BREADY;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_0;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_1;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_2;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_3;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_4;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_5;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_6;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_7;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_8;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_9;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_135_ap_return_10;
    sc_signal< sc_lv<6> > invdar_reg_103;
    sc_signal< sc_lv<1> > tmp_s_fu_157_p2;
    sc_signal< sc_logic > grp_sha256_done_fu_114_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_sha256_hash_fu_135_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > tmp_fu_152_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_INPUT_R_USER_VALUE;
    static const int C_M_AXI_INPUT_R_PROT_VALUE;
    static const int C_M_AXI_INPUT_R_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_OUTPUT_R_USER_VALUE;
    static const int C_M_AXI_OUTPUT_R_PROT_VALUE;
    static const int C_M_AXI_OUTPUT_R_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_clk_no_reset_();
    void thread_INPUT_r_ARVALID();
    void thread_INPUT_r_RREADY();
    void thread_OUTPUT_r_AWVALID();
    void thread_OUTPUT_r_BREADY();
    void thread_OUTPUT_r_WVALID();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_grp_sha256_done_fu_114_ap_start();
    void thread_grp_sha256_hash_fu_135_ap_start();
    void thread_hash_0_ack_out();
    void thread_indvarinc_fu_146_p2();
    void thread_len_0_ack_out();
    void thread_msg_0_ack_out();
    void thread_sha256_buf_address0();
    void thread_sha256_buf_address1();
    void thread_sha256_buf_ce0();
    void thread_sha256_buf_ce1();
    void thread_sha256_buf_d0();
    void thread_sha256_buf_we0();
    void thread_sha256_buf_we1();
    void thread_tmp_fu_152_p1();
    void thread_tmp_s_fu_157_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
