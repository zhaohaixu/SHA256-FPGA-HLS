// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _sha256_HH_
#define _sha256_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sha256_done.h"
#include "sha256_hash.h"
#include "sha256_sha256_buf.h"

namespace ap_rtl {

struct sha256 : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > msg_address0;
    sc_out< sc_logic > msg_ce0;
    sc_in< sc_lv<8> > msg_q0;
    sc_in< sc_lv<32> > len;
    sc_out< sc_lv<5> > hash_address0;
    sc_out< sc_logic > hash_ce0;
    sc_out< sc_logic > hash_we0;
    sc_out< sc_lv<8> > hash_d0;
    sc_out< sc_lv<5> > hash_address1;
    sc_out< sc_logic > hash_ce1;
    sc_out< sc_logic > hash_we1;
    sc_out< sc_lv<8> > hash_d1;


    // Module declarations
    sha256(sc_module_name name);
    SC_HAS_PROCESS(sha256);

    ~sha256();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sha256_sha256_buf* sha256_buf_U;
    sha256_done* grp_sha256_done_fu_72;
    sha256_hash* grp_sha256_hash_fu_90;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > indvarinc_fu_98_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > sha256_bits_1_reg_172;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > grp_sha256_hash_fu_90_ap_ready;
    sc_signal< sc_logic > grp_sha256_hash_fu_90_ap_done;
    sc_signal< sc_lv<32> > sha256_len_0_reg_177;
    sc_signal< sc_lv<32> > sha256hash_0_reg_182;
    sc_signal< sc_lv<32> > sha256hash_1_reg_187;
    sc_signal< sc_lv<32> > sha256hash_2_reg_192;
    sc_signal< sc_lv<32> > sha256hash_3_reg_197;
    sc_signal< sc_lv<32> > sha256hash_4_reg_202;
    sc_signal< sc_lv<32> > sha256hash_5_reg_207;
    sc_signal< sc_lv<32> > sha256hash_6_reg_212;
    sc_signal< sc_lv<32> > sha256hash_7_reg_217;
    sc_signal< sc_lv<32> > sha256_bits_0_reg_222;
    sc_signal< sc_lv<6> > sha256_buf_address0;
    sc_signal< sc_logic > sha256_buf_ce0;
    sc_signal< sc_logic > sha256_buf_we0;
    sc_signal< sc_lv<8> > sha256_buf_d0;
    sc_signal< sc_lv<8> > sha256_buf_q0;
    sc_signal< sc_lv<6> > sha256_buf_address1;
    sc_signal< sc_logic > sha256_buf_ce1;
    sc_signal< sc_logic > sha256_buf_we1;
    sc_signal< sc_lv<8> > sha256_buf_q1;
    sc_signal< sc_logic > grp_sha256_done_fu_72_ap_start;
    sc_signal< sc_logic > grp_sha256_done_fu_72_ap_done;
    sc_signal< sc_logic > grp_sha256_done_fu_72_ap_idle;
    sc_signal< sc_logic > grp_sha256_done_fu_72_ap_ready;
    sc_signal< sc_lv<6> > grp_sha256_done_fu_72_sha256_buf_address0;
    sc_signal< sc_logic > grp_sha256_done_fu_72_sha256_buf_ce0;
    sc_signal< sc_logic > grp_sha256_done_fu_72_sha256_buf_we0;
    sc_signal< sc_lv<8> > grp_sha256_done_fu_72_sha256_buf_d0;
    sc_signal< sc_lv<6> > grp_sha256_done_fu_72_sha256_buf_address1;
    sc_signal< sc_logic > grp_sha256_done_fu_72_sha256_buf_ce1;
    sc_signal< sc_logic > grp_sha256_done_fu_72_sha256_buf_we1;
    sc_signal< sc_lv<8> > grp_sha256_done_fu_72_sha256_buf_d1;
    sc_signal< sc_lv<5> > grp_sha256_done_fu_72_hash_address0;
    sc_signal< sc_logic > grp_sha256_done_fu_72_hash_ce0;
    sc_signal< sc_logic > grp_sha256_done_fu_72_hash_we0;
    sc_signal< sc_lv<8> > grp_sha256_done_fu_72_hash_d0;
    sc_signal< sc_lv<5> > grp_sha256_done_fu_72_hash_address1;
    sc_signal< sc_logic > grp_sha256_done_fu_72_hash_ce1;
    sc_signal< sc_logic > grp_sha256_done_fu_72_hash_we1;
    sc_signal< sc_lv<8> > grp_sha256_done_fu_72_hash_d1;
    sc_signal< sc_logic > grp_sha256_hash_fu_90_ap_start;
    sc_signal< sc_logic > grp_sha256_hash_fu_90_ap_idle;
    sc_signal< sc_lv<6> > grp_sha256_hash_fu_90_sha256_buf_address0;
    sc_signal< sc_logic > grp_sha256_hash_fu_90_sha256_buf_ce0;
    sc_signal< sc_logic > grp_sha256_hash_fu_90_sha256_buf_we0;
    sc_signal< sc_lv<8> > grp_sha256_hash_fu_90_sha256_buf_d0;
    sc_signal< sc_lv<6> > grp_sha256_hash_fu_90_sha256_buf_address1;
    sc_signal< sc_logic > grp_sha256_hash_fu_90_sha256_buf_ce1;
    sc_signal< sc_lv<6> > grp_sha256_hash_fu_90_data_address0;
    sc_signal< sc_logic > grp_sha256_hash_fu_90_data_ce0;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_0;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_1;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_2;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_3;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_4;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_5;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_6;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_7;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_8;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_9;
    sc_signal< sc_lv<32> > grp_sha256_hash_fu_90_ap_return_10;
    sc_signal< sc_lv<6> > invdar_reg_61;
    sc_signal< sc_lv<1> > tmp_s_fu_109_p2;
    sc_signal< sc_logic > grp_sha256_done_fu_72_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_sha256_hash_fu_90_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_fu_104_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_sha256_done_fu_72_ap_start();
    void thread_grp_sha256_hash_fu_90_ap_start();
    void thread_hash_address0();
    void thread_hash_address1();
    void thread_hash_ce0();
    void thread_hash_ce1();
    void thread_hash_d0();
    void thread_hash_d1();
    void thread_hash_we0();
    void thread_hash_we1();
    void thread_indvarinc_fu_98_p2();
    void thread_msg_address0();
    void thread_msg_ce0();
    void thread_sha256_buf_address0();
    void thread_sha256_buf_address1();
    void thread_sha256_buf_ce0();
    void thread_sha256_buf_ce1();
    void thread_sha256_buf_d0();
    void thread_sha256_buf_we0();
    void thread_sha256_buf_we1();
    void thread_tmp_fu_104_p1();
    void thread_tmp_s_fu_109_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
