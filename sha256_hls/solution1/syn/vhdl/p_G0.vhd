-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity p_G0 is
port (
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of p_G0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_373_fu_38_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_i_fu_28_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_374_fu_60_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_i1_fu_50_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_72_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_41_fu_82_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_i3_fu_64_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_86_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_i_fu_42_p3 : STD_LOGIC_VECTOR (31 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= (tmp_fu_86_p2 xor tmp_49_i_fu_42_p3);
    tmp_373_fu_38_p1 <= x(7 - 1 downto 0);
    tmp_374_fu_60_p1 <= x(18 - 1 downto 0);
    tmp_41_fu_82_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_72_p4),32));
    tmp_49_i3_fu_64_p3 <= (tmp_374_fu_60_p1 & tmp_i1_fu_50_p4);
    tmp_49_i_fu_42_p3 <= (tmp_373_fu_38_p1 & tmp_i_fu_28_p4);
    tmp_fu_86_p2 <= (tmp_49_i3_fu_64_p3 xor tmp_41_fu_82_p1);
    tmp_i1_fu_50_p4 <= x(31 downto 18);
    tmp_i_fu_28_p4 <= x(31 downto 7);
    tmp_s_fu_72_p4 <= x(31 downto 3);
end behav;
