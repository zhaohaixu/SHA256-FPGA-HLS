

================================================================
== Vivado HLS Report for 'sha256'
================================================================
* Date:           Sat Feb 20 20:53:58 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        sha256_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------+-----+------+---------+
    |   Latency  |  Interval  | Pipeline|
    | min |  max | min |  max |   Type  |
    +-----+------+-----+------+---------+
    |  191|  6762|  191|  6762|   none  |
    +-----+------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                     |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- memset_sha256_buf  |   63|   63|         1|          -|          -|    64|    no    |
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!tmp_s)
	3  / (tmp_s)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i8]* %msg) nounwind, !map !53"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %len) nounwind, !map !59"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %hash) nounwind, !map !65"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @sha256_str) nounwind"   --->   Operation 10 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%len_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %len) nounwind"   --->   Operation 11 'read' 'len_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%sha256_buf = alloca [64 x i8], align 16" [src/sha256.c:218]   --->   Operation 12 'alloca' 'sha256_buf' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 13 [1/1] (1.76ns)   --->   "br label %meminst"   --->   Operation 13 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%invdar = phi i6 [ 0, %0 ], [ %indvarinc, %meminst ]" [src/sha256.c:227]   --->   Operation 14 'phi' 'invdar' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.82ns)   --->   "%indvarinc = add i6 %invdar, 1" [src/sha256.c:227]   --->   Operation 15 'add' 'indvarinc' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp = zext i6 %invdar to i64" [src/sha256.c:227]   --->   Operation 16 'zext' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%sha256_buf_addr = getelementptr [64 x i8]* %sha256_buf, i64 0, i64 %tmp" [src/sha256.c:227]   --->   Operation 17 'getelementptr' 'sha256_buf_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (2.32ns)   --->   "store i8 0, i8* %sha256_buf_addr, align 1" [src/sha256.c:227]   --->   Operation 18 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 19 [1/1] (1.42ns)   --->   "%tmp_s = icmp eq i6 %invdar, -1" [src/sha256.c:227]   --->   Operation 19 'icmp' 'tmp_s' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @memset_sha256_buf_st)"   --->   Operation 20 'specloopname' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 21 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "br i1 %tmp_s, label %1, label %meminst" [src/sha256.c:227]   --->   Operation 22 'br' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 23 [2/2] (0.00ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_hash([64 x i8]* %sha256_buf, [64 x i8]* %msg, i32 %len_read) nounwind" [src/sha256.c:244]   --->   Operation 23 'call' 'call_ret' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 24 [1/2] (0.00ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_hash([64 x i8]* %sha256_buf, [64 x i8]* %msg, i32 %len_read) nounwind" [src/sha256.c:244]   --->   Operation 24 'call' 'call_ret' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 25 [1/1] (0.00ns)   --->   "%sha256_bits_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1" [src/sha256.c:244]   --->   Operation 25 'extractvalue' 'sha256_bits_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 26 [1/1] (0.00ns)   --->   "%sha256_len_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0" [src/sha256.c:244]   --->   Operation 26 'extractvalue' 'sha256_len_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 27 [1/1] (0.00ns)   --->   "%sha256hash_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2" [src/sha256.c:244]   --->   Operation 27 'extractvalue' 'sha256hash_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 28 [1/1] (0.00ns)   --->   "%sha256hash_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3" [src/sha256.c:244]   --->   Operation 28 'extractvalue' 'sha256hash_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 29 [1/1] (0.00ns)   --->   "%sha256hash_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4" [src/sha256.c:244]   --->   Operation 29 'extractvalue' 'sha256hash_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 30 [1/1] (0.00ns)   --->   "%sha256hash_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5" [src/sha256.c:244]   --->   Operation 30 'extractvalue' 'sha256hash_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "%sha256hash_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6" [src/sha256.c:244]   --->   Operation 31 'extractvalue' 'sha256hash_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%sha256hash_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7" [src/sha256.c:244]   --->   Operation 32 'extractvalue' 'sha256hash_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%sha256hash_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 8" [src/sha256.c:244]   --->   Operation 33 'extractvalue' 'sha256hash_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%sha256hash_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 9" [src/sha256.c:244]   --->   Operation 34 'extractvalue' 'sha256hash_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (0.00ns)   --->   "%sha256_bits_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 10" [src/sha256.c:244]   --->   Operation 35 'extractvalue' 'sha256_bits_0' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.32>
ST_5 : Operation 36 [2/2] (2.32ns)   --->   "call fastcc void @sha256_done([64 x i8]* %sha256_buf, i32 %sha256hash_0, i32 %sha256hash_1, i32 %sha256hash_2, i32 %sha256hash_3, i32 %sha256hash_4, i32 %sha256hash_5, i32 %sha256hash_6, i32 %sha256hash_7, i32 %sha256_bits_0, i32 %sha256_bits_1, i32 %sha256_len_0, [32 x i8]* %hash) nounwind" [src/sha256.c:245]   --->   Operation 36 'call' <Predicate = true> <Delay = 2.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 37 [1/2] (0.00ns)   --->   "call fastcc void @sha256_done([64 x i8]* %sha256_buf, i32 %sha256hash_0, i32 %sha256hash_1, i32 %sha256hash_2, i32 %sha256hash_3, i32 %sha256hash_4, i32 %sha256hash_5, i32 %sha256hash_6, i32 %sha256hash_7, i32 %sha256_bits_0, i32 %sha256_bits_1, i32 %sha256_len_0, [32 x i8]* %hash) nounwind" [src/sha256.c:245]   --->   Operation 37 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 38 [1/1] (0.00ns)   --->   "ret void" [src/sha256.c:247]   --->   Operation 38 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('invdar', src/sha256.c:227) with incoming values : ('indvarinc', src/sha256.c:227) [12]  (1.77 ns)

 <State 2>: 2.32ns
The critical path consists of the following:
	'phi' operation ('invdar', src/sha256.c:227) with incoming values : ('indvarinc', src/sha256.c:227) [12]  (0 ns)
	'getelementptr' operation ('sha256_buf_addr', src/sha256.c:227) [15]  (0 ns)
	'store' operation (src/sha256.c:227) of constant 0 on array 'sha256_buf', src/sha256.c:218 [16]  (2.32 ns)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 2.32ns
The critical path consists of the following:
	'call' operation (src/sha256.c:245) to 'sha256_done' [34]  (2.32 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
