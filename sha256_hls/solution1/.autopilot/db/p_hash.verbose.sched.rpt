

================================================================
== Vivado HLS Report for 'p_hash'
================================================================
* Date:           Sun Feb 21 21:04:21 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        sha256_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.742|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  185|  185|  185|  185|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name   | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- _hash_label0  |   34|   34|         4|          2|          1|    16|    yes   |
        |- _hash_label1  |  147|  147|         6|          3|          1|    48|    yes   |
        +----------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 4
  * Pipeline-1: initiation interval (II) = 3, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 2
  Pipeline-0 : II = 2, D = 4, States = { 2 3 4 5 }
  Pipeline-1 : II = 3, D = 6, States = { 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	6  / (tmp)
	5  / (!tmp)
5 --> 
	2  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	13  / (exitcond)
	11  / (!exitcond)
11 --> 
	12  / true
12 --> 
	7  / true
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sha256hash_7_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sha256hash_7_read)"   --->   Operation 14 'read' 'sha256hash_7_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sha256hash_6_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sha256hash_6_read)"   --->   Operation 15 'read' 'sha256hash_6_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%sha256hash_5_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sha256hash_5_read)"   --->   Operation 16 'read' 'sha256hash_5_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sha256hash_4_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sha256hash_4_read)"   --->   Operation 17 'read' 'sha256hash_4_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sha256hash_3_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sha256hash_3_read)"   --->   Operation 18 'read' 'sha256hash_3_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sha256hash_2_read71 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sha256hash_2_read)"   --->   Operation 19 'read' 'sha256hash_2_read71' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sha256hash_1_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sha256hash_1_read)"   --->   Operation 20 'read' 'sha256hash_1_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sha256hash_0_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %sha256hash_0_read)"   --->   Operation 21 'read' 'sha256hash_0_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%W = alloca [64 x i32], align 16" [src/sha256.c:82]   --->   Operation 22 'alloca' 'W' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_1 : Operation 23 [1/1] (1.76ns)   --->   "br label %1" [src/sha256.c:94]   --->   Operation 23 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%x_assign = phi i5 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 24 'phi' 'x_assign' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.36ns)   --->   "%tmp = icmp eq i5 %x_assign, -16" [src/sha256.c:94]   --->   Operation 25 'icmp' 'tmp' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_45 = trunc i5 %x_assign to i4" [src/sha256.c:94]   --->   Operation 26 'trunc' 'tmp_45' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_i = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %tmp_45, i2 0)" [src/sha256.c:15->src/sha256.c:112]   --->   Operation 27 'bitconcatenate' 'tmp_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_25 = zext i6 %tmp_i to i64" [src/sha256.c:112]   --->   Operation 28 'zext' 'tmp_25' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%sha256_buf_addr = getelementptr [64 x i8]* %sha256_buf, i64 0, i64 %tmp_25" [src/sha256.c:61->src/sha256.c:112]   --->   Operation 29 'getelementptr' 'sha256_buf_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 30 [2/2] (2.32ns)   --->   "%sha256_buf_load = load i8* %sha256_buf_addr, align 1" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 30 'load' 'sha256_buf_load' <Predicate = (!tmp)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%sum_i = or i6 %tmp_i, 1" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 31 'or' 'sum_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%sum_i_cast = zext i6 %sum_i to i64" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 32 'zext' 'sum_i_cast' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%sha256_buf_addr_11 = getelementptr [64 x i8]* %sha256_buf, i64 0, i64 %sum_i_cast" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 33 'getelementptr' 'sha256_buf_addr_11' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 34 [2/2] (2.32ns)   --->   "%sha256_buf_load_1 = load i8* %sha256_buf_addr_11, align 1" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 34 'load' 'sha256_buf_load_1' <Predicate = (!tmp)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_26 = zext i5 %x_assign to i64" [src/sha256.c:112]   --->   Operation 35 'zext' 'tmp_26' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%K_addr = getelementptr inbounds [64 x i32]* @K, i64 0, i64 %tmp_26" [src/sha256.c:113]   --->   Operation 36 'getelementptr' 'K_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 37 [2/2] (3.25ns)   --->   "%K_load = load i32* %K_addr, align 4" [src/sha256.c:113]   --->   Operation 37 'load' 'K_load' <Predicate = (!tmp)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 38 [1/1] (1.78ns)   --->   "%i = add i5 %x_assign, 1" [src/sha256.c:94]   --->   Operation 38 'add' 'i' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/2] (2.32ns)   --->   "%sha256_buf_load = load i8* %sha256_buf_addr, align 1" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 39 'load' 'sha256_buf_load' <Predicate = (!tmp)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 40 [1/2] (2.32ns)   --->   "%sha256_buf_load_1 = load i8* %sha256_buf_addr_11, align 1" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 40 'load' 'sha256_buf_load_1' <Predicate = (!tmp)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%sum2_i = or i6 %tmp_i, 2" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 41 'or' 'sum2_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%sum2_i_cast = zext i6 %sum2_i to i64" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 42 'zext' 'sum2_i_cast' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%sha256_buf_addr_12 = getelementptr [64 x i8]* %sha256_buf, i64 0, i64 %sum2_i_cast" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 43 'getelementptr' 'sha256_buf_addr_12' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 44 [2/2] (2.32ns)   --->   "%sha256_buf_load_2 = load i8* %sha256_buf_addr_12, align 1" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 44 'load' 'sha256_buf_load_2' <Predicate = (!tmp)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%sum4_i = or i6 %tmp_i, 3" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 45 'or' 'sum4_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%sum4_i_cast = zext i6 %sum4_i to i64" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 46 'zext' 'sum4_i_cast' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%sha256_buf_addr_13 = getelementptr [64 x i8]* %sha256_buf, i64 0, i64 %sum4_i_cast" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 47 'getelementptr' 'sha256_buf_addr_13' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 48 [2/2] (2.32ns)   --->   "%sha256_buf_load_3 = load i8* %sha256_buf_addr_13, align 1" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 48 'load' 'sha256_buf_load_3' <Predicate = (!tmp)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 49 [1/2] (3.25ns)   --->   "%K_load = load i32* %K_addr, align 4" [src/sha256.c:113]   --->   Operation 49 'load' 'K_load' <Predicate = (!tmp)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>

State 4 <SV = 3> <Delay = 5.57>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%h = phi i32 [ %sha256hash_6_read_2, %0 ], [ %g, %2 ]"   --->   Operation 50 'phi' 'h' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%g = phi i32 [ %sha256hash_5_read_2, %0 ], [ %f, %2 ]"   --->   Operation 51 'phi' 'g' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%f = phi i32 [ %sha256hash_4_read_2, %0 ], [ %e, %2 ]"   --->   Operation 52 'phi' 'f' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%d1 = phi i32 [ %sha256hash_3_read_2, %0 ], [ %d, %2 ]"   --->   Operation 53 'phi' 'd1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%d = phi i32 [ %sha256hash_2_read71, %0 ], [ %c, %2 ]"   --->   Operation 54 'phi' 'd' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%c = phi i32 [ %sha256hash_1_read_2, %0 ], [ %b, %2 ]"   --->   Operation 55 'phi' 'c' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%b = phi i32 [ %sha256hash_0_read_2, %0 ], [ %a, %2 ]"   --->   Operation 56 'phi' 'b' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%h1 = phi i32 [ %sha256hash_7_read_2, %0 ], [ %h, %2 ]"   --->   Operation 57 'phi' 'h1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 58 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "br i1 %tmp, label %.preheader.preheader, label %2" [src/sha256.c:94]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/2] (2.32ns)   --->   "%sha256_buf_load_2 = load i8* %sha256_buf_addr_12, align 1" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 60 'load' 'sha256_buf_load_2' <Predicate = (!tmp)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 61 [1/2] (2.32ns)   --->   "%sha256_buf_load_3 = load i8* %sha256_buf_addr_13, align 1" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 61 'load' 'sha256_buf_load_3' <Predicate = (!tmp)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_47_i = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %sha256_buf_load, i8 %sha256_buf_load_1, i8 %sha256_buf_load_2, i8 %sha256_buf_load_3)" [src/sha256.c:63->src/sha256.c:112]   --->   Operation 62 'bitconcatenate' 'tmp_47_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%W_addr = getelementptr inbounds [64 x i32]* %W, i64 0, i64 %tmp_26" [src/sha256.c:112]   --->   Operation 63 'getelementptr' 'W_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (3.25ns)   --->   "store i32 %tmp_47_i, i32* %W_addr, align 4" [src/sha256.c:112]   --->   Operation 64 'store' <Predicate = (!tmp)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_i_i1 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %f, i32 6, i32 31)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:113]   --->   Operation 65 'partselect' 'tmp_i_i1' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_46 = trunc i32 %f to i6" [src/sha256.c:118]   --->   Operation 66 'trunc' 'tmp_46' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_51_i_i = call i32 @_ssdm_op_BitConcatenate.i32.i6.i26(i6 %tmp_46, i26 %tmp_i_i1)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:113]   --->   Operation 67 'bitconcatenate' 'tmp_51_i_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_i1_i = call i21 @_ssdm_op_PartSelect.i21.i32.i32.i32(i32 %f, i32 11, i32 31)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:113]   --->   Operation 68 'partselect' 'tmp_i1_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_47 = trunc i32 %f to i11" [src/sha256.c:118]   --->   Operation 69 'trunc' 'tmp_47' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_51_i3_i = call i32 @_ssdm_op_BitConcatenate.i32.i11.i21(i11 %tmp_47, i21 %tmp_i1_i)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:113]   --->   Operation 70 'bitconcatenate' 'tmp_51_i3_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_i4_i = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %f, i32 25, i32 31)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:113]   --->   Operation 71 'partselect' 'tmp_i4_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_48 = trunc i32 %f to i25" [src/sha256.c:118]   --->   Operation 72 'trunc' 'tmp_48' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_51_i6_i = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 %tmp_48, i7 %tmp_i4_i)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:113]   --->   Operation 73 'bitconcatenate' 'tmp_51_i6_i' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp2 = xor i32 %tmp_51_i_i, %tmp_51_i6_i" [src/sha256.c:45->src/sha256.c:113]   --->   Operation 74 'xor' 'tmp2' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node tmp5)   --->   "%tmp_92_i = xor i32 %tmp2, %tmp_51_i3_i" [src/sha256.c:45->src/sha256.c:113]   --->   Operation 75 'xor' 'tmp_92_i' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node tmp_105_i)   --->   "%tmp_i2 = and i32 %g, %f" [src/sha256.c:27->src/sha256.c:113]   --->   Operation 76 'and' 'tmp_i2' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node tmp_105_i)   --->   "%tmp_i3 = xor i32 %f, -1" [src/sha256.c:27->src/sha256.c:113]   --->   Operation 77 'xor' 'tmp_i3' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node tmp_105_i)   --->   "%tmp_104_i = and i32 %h, %tmp_i3" [src/sha256.c:27->src/sha256.c:113]   --->   Operation 78 'and' 'tmp_104_i' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_105_i = xor i32 %tmp_104_i, %tmp_i2" [src/sha256.c:27->src/sha256.c:113]   --->   Operation 79 'xor' 'tmp_105_i' <Predicate = (!tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (2.55ns) (out node of the LUT)   --->   "%tmp5 = add i32 %tmp_92_i, %K_load" [src/sha256.c:113]   --->   Operation 80 'add' 'tmp5' <Predicate = (!tmp)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 81 [1/1] (2.55ns)   --->   "%tmp7 = add i32 %tmp_47_i, %h1" [src/sha256.c:113]   --->   Operation 81 'add' 'tmp7' <Predicate = (!tmp)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 8.74>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str12) nounwind" [src/sha256.c:94]   --->   Operation 82 'specloopname' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str12)" [src/sha256.c:94]   --->   Operation 83 'specregionbegin' 'tmp_s' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [src/sha256.c:95]   --->   Operation 84 'specpipeline' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp6 = add i32 %tmp_105_i, %tmp7" [src/sha256.c:113]   --->   Operation 85 'add' 'tmp6' <Predicate = (!tmp)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 86 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp_30 = add i32 %tmp5, %tmp6" [src/sha256.c:113]   --->   Operation 86 'add' 'tmp_30' <Predicate = (!tmp)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp_i_i4 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %b, i32 2, i32 31)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:114]   --->   Operation 87 'partselect' 'tmp_i_i4' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp_49 = trunc i32 %b to i2" [src/sha256.c:122]   --->   Operation 88 'trunc' 'tmp_49' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp_51_i_i6 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_49, i30 %tmp_i_i4)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:114]   --->   Operation 89 'bitconcatenate' 'tmp_51_i_i6' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp_i1_i7 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %b, i32 13, i32 31)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:114]   --->   Operation 90 'partselect' 'tmp_i1_i7' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp_50 = trunc i32 %b to i13" [src/sha256.c:122]   --->   Operation 91 'trunc' 'tmp_50' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp_51_i3_i9 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 %tmp_50, i19 %tmp_i1_i7)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:114]   --->   Operation 92 'bitconcatenate' 'tmp_51_i3_i9' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp_i4_i1 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %b, i32 22, i32 31)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:114]   --->   Operation 93 'partselect' 'tmp_i4_i1' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp_51 = trunc i32 %b to i22" [src/sha256.c:122]   --->   Operation 94 'trunc' 'tmp_51' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp_51_i6_i1 = call i32 @_ssdm_op_BitConcatenate.i32.i22.i10(i22 %tmp_51, i10 %tmp_i4_i1)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:114]   --->   Operation 95 'bitconcatenate' 'tmp_51_i6_i1' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i)   --->   "%tmp8 = xor i32 %tmp_51_i_i6, %tmp_51_i6_i1" [src/sha256.c:39->src/sha256.c:114]   --->   Operation 96 'xor' 'tmp8' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_95_i = xor i32 %tmp8, %tmp_51_i3_i9" [src/sha256.c:39->src/sha256.c:114]   --->   Operation 97 'xor' 'tmp_95_i' <Predicate = (!tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node tmp_97_i)   --->   "%tmp_i_85 = xor i32 %d, %c" [src/sha256.c:33->src/sha256.c:114]   --->   Operation 98 'xor' 'tmp_i_85' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node tmp_97_i)   --->   "%tmp_i6 = and i32 %tmp_i_85, %b" [src/sha256.c:33->src/sha256.c:114]   --->   Operation 99 'and' 'tmp_i6' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node tmp_97_i)   --->   "%tmp_96_i = and i32 %d, %c" [src/sha256.c:33->src/sha256.c:114]   --->   Operation 100 'and' 'tmp_96_i' <Predicate = (!tmp)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 101 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_97_i = xor i32 %tmp_i6, %tmp_96_i" [src/sha256.c:33->src/sha256.c:114]   --->   Operation 101 'xor' 'tmp_97_i' <Predicate = (!tmp)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 102 [1/1] (2.55ns)   --->   "%e = add i32 %d1, %tmp_30" [src/sha256.c:118]   --->   Operation 102 'add' 'e' <Predicate = (!tmp)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 103 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp9 = add i32 %tmp_30, %tmp_95_i" [src/sha256.c:122]   --->   Operation 103 'add' 'tmp9' <Predicate = (!tmp)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 104 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a = add i32 %tmp_97_i, %tmp9" [src/sha256.c:122]   --->   Operation 104 'add' 'a' <Predicate = (!tmp)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str12, i32 %tmp_s)" [src/sha256.c:123]   --->   Operation 105 'specregionend' 'empty' <Predicate = (!tmp)> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "br label %1" [src/sha256.c:94]   --->   Operation 106 'br' <Predicate = (!tmp)> <Delay = 0.00>

State 6 <SV = 4> <Delay = 1.76>
ST_6 : Operation 107 [1/1] (1.76ns)   --->   "br label %.preheader" [src/sha256.c:125]   --->   Operation 107 'br' <Predicate = true> <Delay = 1.76>

State 7 <SV = 5> <Delay = 5.12>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%f_1 = phi i32 [ %e_1, %3 ], [ %f, %.preheader.preheader ]"   --->   Operation 108 'phi' 'f_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%i_1 = phi i7 [ %i_5, %3 ], [ 16, %.preheader.preheader ]"   --->   Operation 109 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (1.48ns)   --->   "%exitcond = icmp eq i7 %i_1, -64" [src/sha256.c:125]   --->   Operation 110 'icmp' 'exitcond' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 111 [1/1] (1.87ns)   --->   "%tmp_32 = add i7 -2, %i_1" [src/sha256.c:126]   --->   Operation 111 'add' 'tmp_32' <Predicate = (!exitcond)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 112 [1/1] (0.00ns)   --->   "%tmp_33 = zext i7 %tmp_32 to i64" [src/sha256.c:126]   --->   Operation 112 'zext' 'tmp_33' <Predicate = (!exitcond)> <Delay = 0.00>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "%W_addr_1 = getelementptr inbounds [64 x i32]* %W, i64 0, i64 %tmp_33" [src/sha256.c:126]   --->   Operation 113 'getelementptr' 'W_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_7 : Operation 114 [2/2] (3.25ns)   --->   "%W_load_1 = load i32* %W_addr_1, align 4" [src/sha256.c:126]   --->   Operation 114 'load' 'W_load_1' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_7 : Operation 115 [1/1] (1.87ns)   --->   "%tmp_34 = add i7 -7, %i_1" [src/sha256.c:126]   --->   Operation 115 'add' 'tmp_34' <Predicate = (!exitcond)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_35 = zext i7 %tmp_34 to i64" [src/sha256.c:126]   --->   Operation 116 'zext' 'tmp_35' <Predicate = (!exitcond)> <Delay = 0.00>
ST_7 : Operation 117 [1/1] (0.00ns)   --->   "%W_addr_2 = getelementptr inbounds [64 x i32]* %W, i64 0, i64 %tmp_35" [src/sha256.c:126]   --->   Operation 117 'getelementptr' 'W_addr_2' <Predicate = (!exitcond)> <Delay = 0.00>
ST_7 : Operation 118 [2/2] (3.25ns)   --->   "%W_load = load i32* %W_addr_2, align 4" [src/sha256.c:126]   --->   Operation 118 'load' 'W_load' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 8 <SV = 6> <Delay = 5.12>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "%b_1 = phi i32 [ %a_1, %3 ], [ %b, %.preheader.preheader ]"   --->   Operation 119 'phi' 'b_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 120 [1/2] (3.25ns)   --->   "%W_load_1 = load i32* %W_addr_1, align 4" [src/sha256.c:126]   --->   Operation 120 'load' 'W_load_1' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_8 : Operation 121 [1/2] (3.25ns)   --->   "%W_load = load i32* %W_addr_2, align 4" [src/sha256.c:126]   --->   Operation 121 'load' 'W_load' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_8 : Operation 122 [1/1] (1.87ns)   --->   "%tmp_36 = add i7 -15, %i_1" [src/sha256.c:126]   --->   Operation 122 'add' 'tmp_36' <Predicate = (!exitcond)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_37 = zext i7 %tmp_36 to i64" [src/sha256.c:126]   --->   Operation 123 'zext' 'tmp_37' <Predicate = (!exitcond)> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "%W_addr_3 = getelementptr inbounds [64 x i32]* %W, i64 0, i64 %tmp_37" [src/sha256.c:126]   --->   Operation 124 'getelementptr' 'W_addr_3' <Predicate = (!exitcond)> <Delay = 0.00>
ST_8 : Operation 125 [2/2] (3.25ns)   --->   "%W_load_3 = load i32* %W_addr_3, align 4" [src/sha256.c:126]   --->   Operation 125 'load' 'W_load_3' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_8 : Operation 126 [1/1] (1.87ns)   --->   "%tmp_38 = add i7 -16, %i_1" [src/sha256.c:126]   --->   Operation 126 'add' 'tmp_38' <Predicate = (!exitcond)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_39 = zext i7 %tmp_38 to i64" [src/sha256.c:126]   --->   Operation 127 'zext' 'tmp_39' <Predicate = (!exitcond)> <Delay = 0.00>
ST_8 : Operation 128 [1/1] (0.00ns)   --->   "%W_addr_4 = getelementptr inbounds [64 x i32]* %W, i64 0, i64 %tmp_39" [src/sha256.c:126]   --->   Operation 128 'getelementptr' 'W_addr_4' <Predicate = (!exitcond)> <Delay = 0.00>
ST_8 : Operation 129 [2/2] (3.25ns)   --->   "%W_load_2 = load i32* %W_addr_4, align 4" [src/sha256.c:126]   --->   Operation 129 'load' 'W_load_2' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 9 <SV = 7> <Delay = 5.80>
ST_9 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_i_i2 = call i15 @_ssdm_op_PartSelect.i15.i32.i32.i32(i32 %W_load_1, i32 17, i32 31)" [src/sha256.c:21->src/sha256.c:57->src/sha256.c:126]   --->   Operation 130 'partselect' 'tmp_i_i2' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_53 = trunc i32 %W_load_1 to i17" [src/sha256.c:126]   --->   Operation 131 'trunc' 'tmp_53' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_51_i_i1 = call i32 @_ssdm_op_BitConcatenate.i32.i17.i15(i17 %tmp_53, i15 %tmp_i_i2)" [src/sha256.c:21->src/sha256.c:57->src/sha256.c:126]   --->   Operation 132 'bitconcatenate' 'tmp_51_i_i1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_i1_i1 = call i13 @_ssdm_op_PartSelect.i13.i32.i32.i32(i32 %W_load_1, i32 19, i32 31)" [src/sha256.c:21->src/sha256.c:57->src/sha256.c:126]   --->   Operation 133 'partselect' 'tmp_i1_i1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_54 = trunc i32 %W_load_1 to i19" [src/sha256.c:126]   --->   Operation 134 'trunc' 'tmp_54' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_51_i3_i1 = call i32 @_ssdm_op_BitConcatenate.i32.i19.i13(i19 %tmp_54, i13 %tmp_i1_i1)" [src/sha256.c:21->src/sha256.c:57->src/sha256.c:126]   --->   Operation 135 'bitconcatenate' 'tmp_51_i3_i1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_98_i = call i22 @_ssdm_op_PartSelect.i22.i32.i32.i32(i32 %W_load_1, i32 10, i32 31)" [src/sha256.c:57->src/sha256.c:126]   --->   Operation 136 'partselect' 'tmp_98_i' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_41 = zext i22 %tmp_98_i to i32" [src/sha256.c:57->src/sha256.c:126]   --->   Operation 137 'zext' 'tmp_41' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp10 = xor i32 %tmp_41, %tmp_51_i3_i1" [src/sha256.c:57->src/sha256.c:126]   --->   Operation 138 'xor' 'tmp10' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_100_i = xor i32 %tmp10, %tmp_51_i_i1" [src/sha256.c:57->src/sha256.c:126]   --->   Operation 139 'xor' 'tmp_100_i' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 140 [1/2] (3.25ns)   --->   "%W_load_3 = load i32* %W_addr_3, align 4" [src/sha256.c:126]   --->   Operation 140 'load' 'W_load_3' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_9 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_i_i3 = call i25 @_ssdm_op_PartSelect.i25.i32.i32.i32(i32 %W_load_3, i32 7, i32 31)" [src/sha256.c:21->src/sha256.c:51->src/sha256.c:126]   --->   Operation 141 'partselect' 'tmp_i_i3' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_56 = trunc i32 %W_load_3 to i7" [src/sha256.c:126]   --->   Operation 142 'trunc' 'tmp_56' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_51_i_i2 = call i32 @_ssdm_op_BitConcatenate.i32.i7.i25(i7 %tmp_56, i25 %tmp_i_i3)" [src/sha256.c:21->src/sha256.c:51->src/sha256.c:126]   --->   Operation 143 'bitconcatenate' 'tmp_51_i_i2' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_i1_i2 = call i14 @_ssdm_op_PartSelect.i14.i32.i32.i32(i32 %W_load_3, i32 18, i32 31)" [src/sha256.c:21->src/sha256.c:51->src/sha256.c:126]   --->   Operation 144 'partselect' 'tmp_i1_i2' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_57 = trunc i32 %W_load_3 to i18" [src/sha256.c:126]   --->   Operation 145 'trunc' 'tmp_57' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_51_i3_i2 = call i32 @_ssdm_op_BitConcatenate.i32.i18.i14(i18 %tmp_57, i14 %tmp_i1_i2)" [src/sha256.c:21->src/sha256.c:51->src/sha256.c:126]   --->   Operation 146 'bitconcatenate' 'tmp_51_i3_i2' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_101_i = call i29 @_ssdm_op_PartSelect.i29.i32.i32.i32(i32 %W_load_3, i32 3, i32 31)" [src/sha256.c:51->src/sha256.c:126]   --->   Operation 147 'partselect' 'tmp_101_i' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_42 = zext i29 %tmp_101_i to i32" [src/sha256.c:51->src/sha256.c:126]   --->   Operation 148 'zext' 'tmp_42' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp11 = xor i32 %tmp_42, %tmp_51_i3_i2" [src/sha256.c:51->src/sha256.c:126]   --->   Operation 149 'xor' 'tmp11' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node tmp14)   --->   "%tmp_103_i = xor i32 %tmp11, %tmp_51_i_i2" [src/sha256.c:51->src/sha256.c:126]   --->   Operation 150 'xor' 'tmp_103_i' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 151 [1/2] (3.25ns)   --->   "%W_load_2 = load i32* %W_addr_4, align 4" [src/sha256.c:126]   --->   Operation 151 'load' 'W_load_2' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_9 : Operation 152 [1/1] (2.55ns) (out node of the LUT)   --->   "%tmp14 = add i32 %tmp_100_i, %tmp_103_i" [src/sha256.c:126]   --->   Operation 152 'add' 'tmp14' <Predicate = (!exitcond)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 153 [1/1] (1.87ns)   --->   "%i_5 = add i7 1, %i_1" [src/sha256.c:125]   --->   Operation 153 'add' 'i_5' <Predicate = (!exitcond)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 8> <Delay = 8.74>
ST_10 : Operation 154 [1/1] (0.00ns)   --->   "%h_2 = phi i32 [ %g_1, %3 ], [ %h, %.preheader.preheader ]"   --->   Operation 154 'phi' 'h_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 155 [1/1] (0.00ns)   --->   "%g_1 = phi i32 [ %f_1, %3 ], [ %g, %.preheader.preheader ]"   --->   Operation 155 'phi' 'g_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 156 [1/1] (0.00ns)   --->   "%d_1 = phi i32 [ %d_2, %3 ], [ %d1, %.preheader.preheader ]"   --->   Operation 156 'phi' 'd_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 157 [1/1] (0.00ns)   --->   "%d_2 = phi i32 [ %c_1, %3 ], [ %d, %.preheader.preheader ]"   --->   Operation 157 'phi' 'd_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 158 [1/1] (0.00ns)   --->   "%c_1 = phi i32 [ %b_1, %3 ], [ %c, %.preheader.preheader ]"   --->   Operation 158 'phi' 'c_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 159 [1/1] (0.00ns)   --->   "%h_1 = phi i32 [ %h_2, %3 ], [ %h1, %.preheader.preheader ]"   --->   Operation 159 'phi' 'h_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 160 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 48, i64 48, i64 48)"   --->   Operation 160 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 161 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %4, label %3" [src/sha256.c:125]   --->   Operation 161 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 162 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp13 = add i32 %W_load, %W_load_2" [src/sha256.c:126]   --->   Operation 162 'add' 'tmp13' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 163 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp_40 = add i32 %tmp14, %tmp13" [src/sha256.c:126]   --->   Operation 163 'add' 'tmp_40' <Predicate = (!exitcond)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_43 = zext i7 %i_1 to i64" [src/sha256.c:126]   --->   Operation 164 'zext' 'tmp_43' <Predicate = (!exitcond)> <Delay = 0.00>
ST_10 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node tmp_105_i1)   --->   "%tmp_i3_86 = and i32 %g_1, %f_1" [src/sha256.c:27->src/sha256.c:127]   --->   Operation 165 'and' 'tmp_i3_86' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node tmp_105_i1)   --->   "%tmp_i7 = xor i32 %f_1, -1" [src/sha256.c:27->src/sha256.c:127]   --->   Operation 166 'xor' 'tmp_i7' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node tmp_105_i1)   --->   "%tmp_104_i1 = and i32 %h_2, %tmp_i7" [src/sha256.c:27->src/sha256.c:127]   --->   Operation 167 'and' 'tmp_104_i1' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 168 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_105_i1 = xor i32 %tmp_104_i1, %tmp_i3_86" [src/sha256.c:27->src/sha256.c:127]   --->   Operation 168 'xor' 'tmp_105_i1' <Predicate = (!exitcond)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 169 [1/1] (0.00ns)   --->   "%K_addr_1 = getelementptr inbounds [64 x i32]* @K, i64 0, i64 %tmp_43" [src/sha256.c:127]   --->   Operation 169 'getelementptr' 'K_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_10 : Operation 170 [2/2] (3.25ns)   --->   "%K_load_1 = load i32* %K_addr_1, align 4" [src/sha256.c:127]   --->   Operation 170 'load' 'K_load_1' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_10 : Operation 171 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp20 = add i32 %h_1, %tmp_40" [src/sha256.c:127]   --->   Operation 171 'add' 'tmp20' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 172 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp19 = add i32 %tmp20, %tmp_105_i1" [src/sha256.c:127]   --->   Operation 172 'add' 'tmp19' <Predicate = (!exitcond)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 11 <SV = 9> <Delay = 7.62>
ST_11 : Operation 173 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp_i_i5 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %f_1, i32 6, i32 31)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:127]   --->   Operation 173 'partselect' 'tmp_i_i5' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp_58 = trunc i32 %f_1 to i6" [src/sha256.c:132]   --->   Operation 174 'trunc' 'tmp_58' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp_51_i_i3 = call i32 @_ssdm_op_BitConcatenate.i32.i6.i26(i6 %tmp_58, i26 %tmp_i_i5)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:127]   --->   Operation 175 'bitconcatenate' 'tmp_51_i_i3' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp_i1_i3 = call i21 @_ssdm_op_PartSelect.i21.i32.i32.i32(i32 %f_1, i32 11, i32 31)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:127]   --->   Operation 176 'partselect' 'tmp_i1_i3' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp_59 = trunc i32 %f_1 to i11" [src/sha256.c:132]   --->   Operation 177 'trunc' 'tmp_59' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp_51_i3_i3 = call i32 @_ssdm_op_BitConcatenate.i32.i11.i21(i11 %tmp_59, i21 %tmp_i1_i3)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:127]   --->   Operation 178 'bitconcatenate' 'tmp_51_i3_i3' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp_i4_i2 = call i7 @_ssdm_op_PartSelect.i7.i32.i32.i32(i32 %f_1, i32 25, i32 31)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:127]   --->   Operation 179 'partselect' 'tmp_i4_i2' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp_60 = trunc i32 %f_1 to i25" [src/sha256.c:132]   --->   Operation 180 'trunc' 'tmp_60' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp_51_i6_i2 = call i32 @_ssdm_op_BitConcatenate.i32.i25.i7(i25 %tmp_60, i7 %tmp_i4_i2)" [src/sha256.c:21->src/sha256.c:45->src/sha256.c:127]   --->   Operation 181 'bitconcatenate' 'tmp_51_i6_i2' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node tmp_92_i1)   --->   "%tmp15 = xor i32 %tmp_51_i_i3, %tmp_51_i6_i2" [src/sha256.c:45->src/sha256.c:127]   --->   Operation 182 'xor' 'tmp15' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 183 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_92_i1 = xor i32 %tmp15, %tmp_51_i3_i3" [src/sha256.c:45->src/sha256.c:127]   --->   Operation 183 'xor' 'tmp_92_i1' <Predicate = (!exitcond)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 184 [1/2] (3.25ns)   --->   "%K_load_1 = load i32* %K_addr_1, align 4" [src/sha256.c:127]   --->   Operation 184 'load' 'K_load_1' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_11 : Operation 185 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp18 = add i32 %K_load_1, %tmp_92_i1" [src/sha256.c:127]   --->   Operation 185 'add' 'tmp18' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_11 : Operation 186 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp_44 = add i32 %tmp19, %tmp18" [src/sha256.c:127]   --->   Operation 186 'add' 'tmp_44' <Predicate = (!exitcond)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 12 <SV = 10> <Delay = 5.36>
ST_12 : Operation 187 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str13) nounwind" [src/sha256.c:125]   --->   Operation 187 'specloopname' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 188 [1/1] (0.00ns)   --->   "%tmp_31 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str13)" [src/sha256.c:125]   --->   Operation 188 'specregionbegin' 'tmp_31' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 189 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [src/sha256.c:126]   --->   Operation 189 'specpipeline' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 190 [1/1] (0.00ns)   --->   "%W_addr_5 = getelementptr inbounds [64 x i32]* %W, i64 0, i64 %tmp_43" [src/sha256.c:126]   --->   Operation 190 'getelementptr' 'W_addr_5' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 191 [1/1] (3.25ns)   --->   "store i32 %tmp_40, i32* %W_addr_5, align 4" [src/sha256.c:126]   --->   Operation 191 'store' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_12 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp_i_i6 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %b_1, i32 2, i32 31)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:128]   --->   Operation 192 'partselect' 'tmp_i_i6' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp_61 = trunc i32 %b_1 to i2" [src/sha256.c:136]   --->   Operation 193 'trunc' 'tmp_61' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp_51_i_i4 = call i32 @_ssdm_op_BitConcatenate.i32.i2.i30(i2 %tmp_61, i30 %tmp_i_i6)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:128]   --->   Operation 194 'bitconcatenate' 'tmp_51_i_i4' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp_i1_i4 = call i19 @_ssdm_op_PartSelect.i19.i32.i32.i32(i32 %b_1, i32 13, i32 31)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:128]   --->   Operation 195 'partselect' 'tmp_i1_i4' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp_62 = trunc i32 %b_1 to i13" [src/sha256.c:136]   --->   Operation 196 'trunc' 'tmp_62' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp_51_i3_i4 = call i32 @_ssdm_op_BitConcatenate.i32.i13.i19(i13 %tmp_62, i19 %tmp_i1_i4)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:128]   --->   Operation 197 'bitconcatenate' 'tmp_51_i3_i4' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp_i4_i3 = call i10 @_ssdm_op_PartSelect.i10.i32.i32.i32(i32 %b_1, i32 22, i32 31)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:128]   --->   Operation 198 'partselect' 'tmp_i4_i3' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp_63 = trunc i32 %b_1 to i22" [src/sha256.c:136]   --->   Operation 199 'trunc' 'tmp_63' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 200 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp_51_i6_i3 = call i32 @_ssdm_op_BitConcatenate.i32.i22.i10(i22 %tmp_63, i10 %tmp_i4_i3)" [src/sha256.c:21->src/sha256.c:39->src/sha256.c:128]   --->   Operation 200 'bitconcatenate' 'tmp_51_i6_i3' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node tmp_95_i1)   --->   "%tmp21 = xor i32 %tmp_51_i_i4, %tmp_51_i6_i3" [src/sha256.c:39->src/sha256.c:128]   --->   Operation 201 'xor' 'tmp21' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 202 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_95_i1 = xor i32 %tmp21, %tmp_51_i3_i4" [src/sha256.c:39->src/sha256.c:128]   --->   Operation 202 'xor' 'tmp_95_i1' <Predicate = (!exitcond)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node tmp_97_i1)   --->   "%tmp_i4 = xor i32 %d_2, %c_1" [src/sha256.c:33->src/sha256.c:128]   --->   Operation 203 'xor' 'tmp_i4' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node tmp_97_i1)   --->   "%tmp_i8 = and i32 %tmp_i4, %b_1" [src/sha256.c:33->src/sha256.c:128]   --->   Operation 204 'and' 'tmp_i8' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node tmp_97_i1)   --->   "%tmp_96_i1 = and i32 %d_2, %c_1" [src/sha256.c:33->src/sha256.c:128]   --->   Operation 205 'and' 'tmp_96_i1' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 206 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_97_i1 = xor i32 %tmp_i8, %tmp_96_i1" [src/sha256.c:33->src/sha256.c:128]   --->   Operation 206 'xor' 'tmp_97_i1' <Predicate = (!exitcond)> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 207 [1/1] (2.55ns)   --->   "%e_1 = add i32 %tmp_44, %d_1" [src/sha256.c:132]   --->   Operation 207 'add' 'e_1' <Predicate = (!exitcond)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 208 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp22 = add i32 %tmp_95_i1, %tmp_44" [src/sha256.c:136]   --->   Operation 208 'add' 'tmp22' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 209 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%a_1 = add i32 %tmp22, %tmp_97_i1" [src/sha256.c:136]   --->   Operation 209 'add' 'a_1' <Predicate = (!exitcond)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 210 [1/1] (0.00ns)   --->   "%empty_87 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str13, i32 %tmp_31)" [src/sha256.c:137]   --->   Operation 210 'specregionend' 'empty_87' <Predicate = (!exitcond)> <Delay = 0.00>
ST_12 : Operation 211 [1/1] (0.00ns)   --->   "br label %.preheader" [src/sha256.c:125]   --->   Operation 211 'br' <Predicate = (!exitcond)> <Delay = 0.00>

State 13 <SV = 9> <Delay = 2.55>
ST_13 : Operation 212 [1/1] (2.55ns)   --->   "%sha256hash_0_write_s = add i32 %b_1, %sha256hash_0_read_2" [src/sha256.c:139]   --->   Operation 212 'add' 'sha256hash_0_write_s' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 213 [1/1] (2.55ns)   --->   "%sha256hash_1_write_s = add i32 %c_1, %sha256hash_1_read_2" [src/sha256.c:140]   --->   Operation 213 'add' 'sha256hash_1_write_s' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 214 [1/1] (2.55ns)   --->   "%sha256hash_2_write_s = add i32 %d_2, %sha256hash_2_read71" [src/sha256.c:141]   --->   Operation 214 'add' 'sha256hash_2_write_s' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 215 [1/1] (2.55ns)   --->   "%sha256hash_3_write_s = add i32 %d_1, %sha256hash_3_read_2" [src/sha256.c:142]   --->   Operation 215 'add' 'sha256hash_3_write_s' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 216 [1/1] (2.55ns)   --->   "%sha256hash_4_write_s = add i32 %f_1, %sha256hash_4_read_2" [src/sha256.c:143]   --->   Operation 216 'add' 'sha256hash_4_write_s' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 217 [1/1] (2.55ns)   --->   "%sha256hash_5_write_s = add i32 %g_1, %sha256hash_5_read_2" [src/sha256.c:144]   --->   Operation 217 'add' 'sha256hash_5_write_s' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 218 [1/1] (2.55ns)   --->   "%sha256hash_6_write_s = add i32 %h_2, %sha256hash_6_read_2" [src/sha256.c:145]   --->   Operation 218 'add' 'sha256hash_6_write_s' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 219 [1/1] (2.55ns)   --->   "%sha256hash_7_write_s = add i32 %h_1, %sha256hash_7_read_2" [src/sha256.c:146]   --->   Operation 219 'add' 'sha256hash_7_write_s' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 220 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } undef, i32 %sha256hash_0_write_s, 0" [src/sha256.c:147]   --->   Operation 220 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 221 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv, i32 %sha256hash_1_write_s, 1" [src/sha256.c:147]   --->   Operation 221 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 222 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_1, i32 %sha256hash_2_write_s, 2" [src/sha256.c:147]   --->   Operation 222 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 223 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_2, i32 %sha256hash_3_write_s, 3" [src/sha256.c:147]   --->   Operation 223 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 224 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_3, i32 %sha256hash_4_write_s, 4" [src/sha256.c:147]   --->   Operation 224 'insertvalue' 'mrv_4' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 225 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_4, i32 %sha256hash_5_write_s, 5" [src/sha256.c:147]   --->   Operation 225 'insertvalue' 'mrv_5' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 226 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_5, i32 %sha256hash_6_write_s, 6" [src/sha256.c:147]   --->   Operation 226 'insertvalue' 'mrv_6' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 227 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_6, i32 %sha256hash_7_write_s, 7" [src/sha256.c:147]   --->   Operation 227 'insertvalue' 'mrv_7' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 228 [1/1] (0.00ns)   --->   "ret { i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_7" [src/sha256.c:147]   --->   Operation 228 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('g') with incoming values : ('sha256hash[6]') ('sha256hash[5]') ('sha256hash[4]') ('e', src/sha256.c:118) [22]  (1.77 ns)

 <State 2>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/sha256.c:94) [30]  (0 ns)
	'getelementptr' operation ('K_addr', src/sha256.c:113) [75]  (0 ns)
	'load' operation ('K_load', src/sha256.c:113) on array 'K' [76]  (3.25 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'load' operation ('K_load', src/sha256.c:113) on array 'K' [76]  (3.25 ns)

 <State 4>: 5.58ns
The critical path consists of the following:
	'load' operation ('sha256_buf_load_2', src/sha256.c:63->src/sha256.c:112) on array 'sha256_buf' [51]  (2.32 ns)
	'store' operation (src/sha256.c:112) of variable 'tmp_47_i', src/sha256.c:63->src/sha256.c:112 on array 'W', src/sha256.c:82 [59]  (3.25 ns)

 <State 5>: 8.74ns
The critical path consists of the following:
	'add' operation ('tmp6', src/sha256.c:113) [79]  (0 ns)
	'add' operation ('tmp_30', src/sha256.c:113) [80]  (4.37 ns)
	'add' operation ('tmp9', src/sha256.c:122) [97]  (0 ns)
	'add' operation ('a', src/sha256.c:122) [98]  (4.37 ns)

 <State 6>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('g') with incoming values : ('sha256hash[6]') ('sha256hash[5]') ('sha256hash[4]') ('e', src/sha256.c:118) ('e', src/sha256.c:132) [104]  (1.77 ns)

 <State 7>: 5.12ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', src/sha256.c:125) [112]  (0 ns)
	'add' operation ('tmp_32', src/sha256.c:126) [120]  (1.87 ns)
	'getelementptr' operation ('W_addr_1', src/sha256.c:126) [122]  (0 ns)
	'load' operation ('x', src/sha256.c:126) on array 'W', src/sha256.c:82 [123]  (3.25 ns)

 <State 8>: 5.12ns
The critical path consists of the following:
	'add' operation ('tmp_36', src/sha256.c:126) [138]  (1.87 ns)
	'getelementptr' operation ('W_addr_3', src/sha256.c:126) [140]  (0 ns)
	'load' operation ('x', src/sha256.c:126) on array 'W', src/sha256.c:82 [141]  (3.25 ns)

 <State 9>: 5.81ns
The critical path consists of the following:
	'load' operation ('x', src/sha256.c:126) on array 'W', src/sha256.c:82 [141]  (3.25 ns)
	'xor' operation ('tmp_103_i', src/sha256.c:51->src/sha256.c:126) [151]  (0 ns)
	'add' operation ('tmp14', src/sha256.c:126) [157]  (2.55 ns)

 <State 10>: 8.74ns
The critical path consists of the following:
	'add' operation ('tmp13', src/sha256.c:126) [156]  (0 ns)
	'add' operation ('tmp_40', src/sha256.c:126) [158]  (4.37 ns)
	'add' operation ('tmp20', src/sha256.c:127) [180]  (0 ns)
	'add' operation ('tmp19', src/sha256.c:127) [181]  (4.37 ns)

 <State 11>: 7.63ns
The critical path consists of the following:
	'load' operation ('K_load_1', src/sha256.c:127) on array 'K' [178]  (3.25 ns)
	'add' operation ('tmp18', src/sha256.c:127) [179]  (0 ns)
	'add' operation ('tmp_44', src/sha256.c:127) [182]  (4.37 ns)

 <State 12>: 5.36ns
The critical path consists of the following:
	'xor' operation ('tmp21', src/sha256.c:39->src/sha256.c:128) [192]  (0 ns)
	'xor' operation ('tmp_95_i1', src/sha256.c:39->src/sha256.c:128) [193]  (0.993 ns)
	'add' operation ('tmp22', src/sha256.c:136) [199]  (0 ns)
	'add' operation ('a', src/sha256.c:136) [200]  (4.37 ns)

 <State 13>: 2.55ns
The critical path consists of the following:
	'add' operation ('sha256hash[0]', src/sha256.c:139) [205]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
