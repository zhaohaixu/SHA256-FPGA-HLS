

================================================================
== Vivado HLS Report for 'sha256'
================================================================
* Date:           Sun Feb 21 21:04:24 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        sha256_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-------+-----+-------+---------+
    |   Latency   |   Interval  | Pipeline|
    | min |  max  | min |  max  |   Type  |
    +-----+-------+-----+-------+---------+
    |  308|  12678|  308|  12678|   none  |
    +-----+-------+-----+-------+---------+

    + Detail: 
        * Instance: 
        +------------------------+-------------+-----+-------+-----+-------+---------+
        |                        |             |   Latency   |   Interval  | Pipeline|
        |        Instance        |    Module   | min |  max  | min |  max  |   Type  |
        +------------------------+-------------+-----+-------+-----+-------+---------+
        |grp_sha256_done_fu_114  |sha256_done  |  232|    506|  232|    506|   none  |
        |grp_sha256_hash_fu_135  |sha256_hash  |    7|  12103|    7|  12103|   none  |
        +------------------------+-------------+-----+-------+-----+-------+---------+

        * Loop: 
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                     |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- memset_sha256_buf  |   63|   63|         1|          -|          -|    64|    no    |
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	3  / (!tmp_s)
	4  / (tmp_s)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.32>
ST_1 : Operation 8 [2/2] (1.00ns)   --->   "%hash_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %hash)"   --->   Operation 8 'read' 'hash_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 9 [2/2] (1.00ns)   --->   "%len_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %len)"   --->   Operation 9 'read' 'len_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 10 [2/2] (1.00ns)   --->   "%msg_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %msg)"   --->   Operation 10 'read' 'msg_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 11 [1/1] (2.32ns)   --->   "%sha256_buf = alloca [64 x i8], align 16" [src/sha256.c:227]   --->   Operation 11 'alloca' 'sha256_buf' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %OUTPUT_r), !map !53"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %INPUT_r), !map !59"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %len) nounwind, !map !65"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @sha256_str) nounwind"   --->   Operation 15 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/2] (1.00ns)   --->   "%hash_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %hash)"   --->   Operation 16 'read' 'hash_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 17 [1/2] (1.00ns)   --->   "%len_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %len)"   --->   Operation 17 'read' 'len_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 18 [1/2] (1.00ns)   --->   "%msg_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %msg)"   --->   Operation 18 'read' 'msg_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %INPUT_r, [6 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 900000, [6 x i8]* @p_str7, [6 x i8]* @p_str8, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/sha256.c:221]   --->   Operation 19 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %OUTPUT_r, [6 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 900000, [7 x i8]* @p_str9, [6 x i8]* @p_str8, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [src/sha256.c:222]   --->   Operation 20 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %msg, [10 x i8]* @p_str10, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str11, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [src/sha256.c:223]   --->   Operation 21 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %hash, [10 x i8]* @p_str10, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str11, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [src/sha256.c:224]   --->   Operation 22 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %len, [10 x i8]* @p_str10, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [9 x i8]* @p_str11, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [src/sha256.c:225]   --->   Operation 23 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.76ns)   --->   "br label %meminst"   --->   Operation 24 'br' <Predicate = true> <Delay = 1.76>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%invdar = phi i6 [ 0, %0 ], [ %indvarinc, %meminst ]" [src/sha256.c:236]   --->   Operation 25 'phi' 'invdar' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (1.82ns)   --->   "%indvarinc = add i6 %invdar, 1" [src/sha256.c:236]   --->   Operation 26 'add' 'indvarinc' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%tmp = zext i6 %invdar to i64" [src/sha256.c:236]   --->   Operation 27 'zext' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%sha256_buf_addr = getelementptr [64 x i8]* %sha256_buf, i64 0, i64 %tmp" [src/sha256.c:236]   --->   Operation 28 'getelementptr' 'sha256_buf_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (2.32ns)   --->   "store i8 0, i8* %sha256_buf_addr, align 1" [src/sha256.c:236]   --->   Operation 29 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_3 : Operation 30 [1/1] (1.42ns)   --->   "%tmp_s = icmp eq i6 %invdar, -1" [src/sha256.c:236]   --->   Operation 30 'icmp' 'tmp_s' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @memset_sha256_buf_st)"   --->   Operation 31 'specloopname' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 32 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "br i1 %tmp_s, label %1, label %meminst" [src/sha256.c:236]   --->   Operation 33 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 34 [2/2] (8.75ns)   --->   "%tmp_29 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_hash([64 x i8]* nocapture %sha256_buf, i8* %INPUT_r, i32 %msg_read, i32 %len_read)" [src/sha256.c:253]   --->   Operation 34 'call' 'tmp_29' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 35 [1/2] (0.00ns)   --->   "%tmp_29 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_hash([64 x i8]* nocapture %sha256_buf, i8* %INPUT_r, i32 %msg_read, i32 %len_read)" [src/sha256.c:253]   --->   Operation 35 'call' 'tmp_29' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%sha256_bits_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 1" [src/sha256.c:253]   --->   Operation 36 'extractvalue' 'sha256_bits_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (0.00ns)   --->   "%sha256_len_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 0" [src/sha256.c:253]   --->   Operation 37 'extractvalue' 'sha256_len_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 38 [1/1] (0.00ns)   --->   "%sha256hash_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 2" [src/sha256.c:253]   --->   Operation 38 'extractvalue' 'sha256hash_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%sha256hash_1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 3" [src/sha256.c:253]   --->   Operation 39 'extractvalue' 'sha256hash_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%sha256hash_2 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 4" [src/sha256.c:253]   --->   Operation 40 'extractvalue' 'sha256hash_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%sha256hash_3 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 5" [src/sha256.c:253]   --->   Operation 41 'extractvalue' 'sha256hash_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%sha256hash_4 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 6" [src/sha256.c:253]   --->   Operation 42 'extractvalue' 'sha256hash_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (0.00ns)   --->   "%sha256hash_5 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 7" [src/sha256.c:253]   --->   Operation 43 'extractvalue' 'sha256hash_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%sha256hash_6 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 8" [src/sha256.c:253]   --->   Operation 44 'extractvalue' 'sha256hash_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%sha256hash_7 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 9" [src/sha256.c:253]   --->   Operation 45 'extractvalue' 'sha256hash_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (0.00ns)   --->   "%sha256_bits_0 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_29, 10" [src/sha256.c:253]   --->   Operation 46 'extractvalue' 'sha256_bits_0' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 2.32>
ST_6 : Operation 47 [2/2] (2.32ns)   --->   "call fastcc void @sha256_done([64 x i8]* nocapture %sha256_buf, i32 %sha256hash_0, i32 %sha256hash_1, i32 %sha256hash_2, i32 %sha256hash_3, i32 %sha256hash_4, i32 %sha256hash_5, i32 %sha256hash_6, i32 %sha256hash_7, i32 %sha256_bits_0, i32 %sha256_bits_1, i32 %sha256_len_0, i8* %OUTPUT_r, i32 %hash_read)" [src/sha256.c:254]   --->   Operation 47 'call' <Predicate = true> <Delay = 2.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 48 [1/2] (0.00ns)   --->   "call fastcc void @sha256_done([64 x i8]* nocapture %sha256_buf, i32 %sha256hash_0, i32 %sha256hash_1, i32 %sha256hash_2, i32 %sha256hash_3, i32 %sha256hash_4, i32 %sha256hash_5, i32 %sha256hash_6, i32 %sha256hash_7, i32 %sha256_bits_0, i32 %sha256_bits_1, i32 %sha256_len_0, i8* %OUTPUT_r, i32 %hash_read)" [src/sha256.c:254]   --->   Operation 48 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 49 [1/1] (0.00ns)   --->   "ret void" [src/sha256.c:256]   --->   Operation 49 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ INPUT_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ OUTPUT_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ msg]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ len]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ hash]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ K]:  wired=0; compound=1; hidden=1; nouse=1; global=1; static=1; extern=0; dir=0; type=1; pingpong=0; private_global=1; linkage=7; visibility=0; MemPort=[1]; IO mode=ap_memory:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
sha256_buf      (alloca           ) [ 00111111]
StgValue_12     (specbitsmap      ) [ 00000000]
StgValue_13     (specbitsmap      ) [ 00000000]
StgValue_14     (specbitsmap      ) [ 00000000]
StgValue_15     (spectopmodule    ) [ 00000000]
hash_read       (read             ) [ 00011111]
len_read        (read             ) [ 00011100]
msg_read        (read             ) [ 00011100]
StgValue_19     (specinterface    ) [ 00000000]
StgValue_20     (specinterface    ) [ 00000000]
StgValue_21     (specinterface    ) [ 00000000]
StgValue_22     (specinterface    ) [ 00000000]
StgValue_23     (specinterface    ) [ 00000000]
StgValue_24     (br               ) [ 00110000]
invdar          (phi              ) [ 00010000]
indvarinc       (add              ) [ 00110000]
tmp             (zext             ) [ 00000000]
sha256_buf_addr (getelementptr    ) [ 00000000]
StgValue_29     (store            ) [ 00000000]
tmp_s           (icmp             ) [ 00010000]
StgValue_31     (specloopname     ) [ 00000000]
StgValue_32     (speclooptripcount) [ 00000000]
StgValue_33     (br               ) [ 00110000]
tmp_29          (call             ) [ 00000000]
sha256_bits_1   (extractvalue     ) [ 00000011]
sha256_len_0    (extractvalue     ) [ 00000011]
sha256hash_0    (extractvalue     ) [ 00000011]
sha256hash_1    (extractvalue     ) [ 00000011]
sha256hash_2    (extractvalue     ) [ 00000011]
sha256hash_3    (extractvalue     ) [ 00000011]
sha256hash_4    (extractvalue     ) [ 00000011]
sha256hash_5    (extractvalue     ) [ 00000011]
sha256hash_6    (extractvalue     ) [ 00000011]
sha256hash_7    (extractvalue     ) [ 00000011]
sha256_bits_0   (extractvalue     ) [ 00000011]
StgValue_48     (call             ) [ 00000000]
StgValue_49     (ret              ) [ 00000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="INPUT_r">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="INPUT_r"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="OUTPUT_r">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="OUTPUT_r"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="msg">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="msg"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="len">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="len"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="hash">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="hash"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="K">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="K"/><MemPortTyVec>1 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i32"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="sha256_str"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str6"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str7"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str8"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str9"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str10"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str11"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="memset_sha256_buf_st"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="sha256_hash"/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="sha256_done"/></StgValue>
</bind>
</comp>

<comp id="68" class="1004" name="sha256_buf_alloca_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="1" slack="0"/>
<pin id="70" dir="1" index="1" bw="8" slack="2147483647"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="sha256_buf/1 "/>
</bind>
</comp>

<comp id="72" class="1004" name="grp_read_fu_72">
<pin_list>
<pin id="73" dir="0" index="0" bw="32" slack="0"/>
<pin id="74" dir="0" index="1" bw="32" slack="0"/>
<pin id="75" dir="1" index="2" bw="32" slack="4"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="hash_read/1 "/>
</bind>
</comp>

<comp id="78" class="1004" name="grp_read_fu_78">
<pin_list>
<pin id="79" dir="0" index="0" bw="32" slack="0"/>
<pin id="80" dir="0" index="1" bw="32" slack="0"/>
<pin id="81" dir="1" index="2" bw="32" slack="2"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="len_read/1 "/>
</bind>
</comp>

<comp id="84" class="1004" name="grp_read_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="32" slack="0"/>
<pin id="86" dir="0" index="1" bw="32" slack="0"/>
<pin id="87" dir="1" index="2" bw="32" slack="2"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="msg_read/1 "/>
</bind>
</comp>

<comp id="90" class="1004" name="sha256_buf_addr_gep_fu_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="8" slack="2147483647"/>
<pin id="92" dir="0" index="1" bw="1" slack="0"/>
<pin id="93" dir="0" index="2" bw="6" slack="0"/>
<pin id="94" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="sha256_buf_addr/3 "/>
</bind>
</comp>

<comp id="96" class="1004" name="StgValue_29_access_fu_96">
<pin_list>
<pin id="97" dir="0" index="0" bw="6" slack="0"/>
<pin id="98" dir="0" index="1" bw="8" slack="0"/>
<pin id="99" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="100" dir="1" index="3" bw="8" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_29/3 "/>
</bind>
</comp>

<comp id="103" class="1005" name="invdar_reg_103">
<pin_list>
<pin id="104" dir="0" index="0" bw="6" slack="1"/>
<pin id="105" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="invdar (phireg) "/>
</bind>
</comp>

<comp id="107" class="1004" name="invdar_phi_fu_107">
<pin_list>
<pin id="108" dir="0" index="0" bw="1" slack="1"/>
<pin id="109" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="110" dir="0" index="2" bw="6" slack="0"/>
<pin id="111" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="112" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="invdar/3 "/>
</bind>
</comp>

<comp id="114" class="1004" name="grp_sha256_done_fu_114">
<pin_list>
<pin id="115" dir="0" index="0" bw="0" slack="0"/>
<pin id="116" dir="0" index="1" bw="8" slack="2147483647"/>
<pin id="117" dir="0" index="2" bw="32" slack="1"/>
<pin id="118" dir="0" index="3" bw="32" slack="1"/>
<pin id="119" dir="0" index="4" bw="32" slack="1"/>
<pin id="120" dir="0" index="5" bw="32" slack="1"/>
<pin id="121" dir="0" index="6" bw="32" slack="1"/>
<pin id="122" dir="0" index="7" bw="32" slack="1"/>
<pin id="123" dir="0" index="8" bw="32" slack="1"/>
<pin id="124" dir="0" index="9" bw="32" slack="1"/>
<pin id="125" dir="0" index="10" bw="32" slack="1"/>
<pin id="126" dir="0" index="11" bw="32" slack="1"/>
<pin id="127" dir="0" index="12" bw="32" slack="1"/>
<pin id="128" dir="0" index="13" bw="8" slack="0"/>
<pin id="129" dir="0" index="14" bw="32" slack="4"/>
<pin id="130" dir="0" index="15" bw="32" slack="0"/>
<pin id="131" dir="1" index="16" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="StgValue_47/6 "/>
</bind>
</comp>

<comp id="135" class="1004" name="grp_sha256_hash_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="352" slack="0"/>
<pin id="137" dir="0" index="1" bw="8" slack="2147483647"/>
<pin id="138" dir="0" index="2" bw="8" slack="0"/>
<pin id="139" dir="0" index="3" bw="32" slack="2"/>
<pin id="140" dir="0" index="4" bw="32" slack="2"/>
<pin id="141" dir="0" index="5" bw="32" slack="0"/>
<pin id="142" dir="1" index="6" bw="352" slack="0"/>
</pin_list>
<bind>
<opcode="call(48) " fcode="call"/>
<opset="tmp_29/4 "/>
</bind>
</comp>

<comp id="146" class="1004" name="indvarinc_fu_146">
<pin_list>
<pin id="147" dir="0" index="0" bw="6" slack="0"/>
<pin id="148" dir="0" index="1" bw="1" slack="0"/>
<pin id="149" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="indvarinc/3 "/>
</bind>
</comp>

<comp id="152" class="1004" name="tmp_fu_152">
<pin_list>
<pin id="153" dir="0" index="0" bw="6" slack="0"/>
<pin id="154" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp/3 "/>
</bind>
</comp>

<comp id="157" class="1004" name="tmp_s_fu_157">
<pin_list>
<pin id="158" dir="0" index="0" bw="6" slack="0"/>
<pin id="159" dir="0" index="1" bw="1" slack="0"/>
<pin id="160" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_s/3 "/>
</bind>
</comp>

<comp id="163" class="1004" name="sha256_bits_1_fu_163">
<pin_list>
<pin id="164" dir="0" index="0" bw="352" slack="0"/>
<pin id="165" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256_bits_1/5 "/>
</bind>
</comp>

<comp id="167" class="1004" name="sha256_len_0_fu_167">
<pin_list>
<pin id="168" dir="0" index="0" bw="352" slack="0"/>
<pin id="169" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256_len_0/5 "/>
</bind>
</comp>

<comp id="171" class="1004" name="sha256hash_0_fu_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="352" slack="0"/>
<pin id="173" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256hash_0/5 "/>
</bind>
</comp>

<comp id="175" class="1004" name="sha256hash_1_fu_175">
<pin_list>
<pin id="176" dir="0" index="0" bw="352" slack="0"/>
<pin id="177" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256hash_1/5 "/>
</bind>
</comp>

<comp id="179" class="1004" name="sha256hash_2_fu_179">
<pin_list>
<pin id="180" dir="0" index="0" bw="352" slack="0"/>
<pin id="181" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256hash_2/5 "/>
</bind>
</comp>

<comp id="183" class="1004" name="sha256hash_3_fu_183">
<pin_list>
<pin id="184" dir="0" index="0" bw="352" slack="0"/>
<pin id="185" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256hash_3/5 "/>
</bind>
</comp>

<comp id="187" class="1004" name="sha256hash_4_fu_187">
<pin_list>
<pin id="188" dir="0" index="0" bw="352" slack="0"/>
<pin id="189" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256hash_4/5 "/>
</bind>
</comp>

<comp id="191" class="1004" name="sha256hash_5_fu_191">
<pin_list>
<pin id="192" dir="0" index="0" bw="352" slack="0"/>
<pin id="193" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256hash_5/5 "/>
</bind>
</comp>

<comp id="195" class="1004" name="sha256hash_6_fu_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="352" slack="0"/>
<pin id="197" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256hash_6/5 "/>
</bind>
</comp>

<comp id="199" class="1004" name="sha256hash_7_fu_199">
<pin_list>
<pin id="200" dir="0" index="0" bw="352" slack="0"/>
<pin id="201" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256hash_7/5 "/>
</bind>
</comp>

<comp id="203" class="1004" name="sha256_bits_0_fu_203">
<pin_list>
<pin id="204" dir="0" index="0" bw="352" slack="0"/>
<pin id="205" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="extractvalue(56) " fcode="extractvalue"/>
<opset="sha256_bits_0/5 "/>
</bind>
</comp>

<comp id="207" class="1005" name="hash_read_reg_207">
<pin_list>
<pin id="208" dir="0" index="0" bw="32" slack="4"/>
<pin id="209" dir="1" index="1" bw="32" slack="4"/>
</pin_list>
<bind>
<opset="hash_read "/>
</bind>
</comp>

<comp id="212" class="1005" name="len_read_reg_212">
<pin_list>
<pin id="213" dir="0" index="0" bw="32" slack="2"/>
<pin id="214" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="len_read "/>
</bind>
</comp>

<comp id="217" class="1005" name="msg_read_reg_217">
<pin_list>
<pin id="218" dir="0" index="0" bw="32" slack="2"/>
<pin id="219" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="msg_read "/>
</bind>
</comp>

<comp id="222" class="1005" name="indvarinc_reg_222">
<pin_list>
<pin id="223" dir="0" index="0" bw="6" slack="0"/>
<pin id="224" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opset="indvarinc "/>
</bind>
</comp>

<comp id="230" class="1005" name="sha256_bits_1_reg_230">
<pin_list>
<pin id="231" dir="0" index="0" bw="32" slack="1"/>
<pin id="232" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256_bits_1 "/>
</bind>
</comp>

<comp id="235" class="1005" name="sha256_len_0_reg_235">
<pin_list>
<pin id="236" dir="0" index="0" bw="32" slack="1"/>
<pin id="237" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256_len_0 "/>
</bind>
</comp>

<comp id="240" class="1005" name="sha256hash_0_reg_240">
<pin_list>
<pin id="241" dir="0" index="0" bw="32" slack="1"/>
<pin id="242" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256hash_0 "/>
</bind>
</comp>

<comp id="245" class="1005" name="sha256hash_1_reg_245">
<pin_list>
<pin id="246" dir="0" index="0" bw="32" slack="1"/>
<pin id="247" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256hash_1 "/>
</bind>
</comp>

<comp id="250" class="1005" name="sha256hash_2_reg_250">
<pin_list>
<pin id="251" dir="0" index="0" bw="32" slack="1"/>
<pin id="252" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256hash_2 "/>
</bind>
</comp>

<comp id="255" class="1005" name="sha256hash_3_reg_255">
<pin_list>
<pin id="256" dir="0" index="0" bw="32" slack="1"/>
<pin id="257" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256hash_3 "/>
</bind>
</comp>

<comp id="260" class="1005" name="sha256hash_4_reg_260">
<pin_list>
<pin id="261" dir="0" index="0" bw="32" slack="1"/>
<pin id="262" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256hash_4 "/>
</bind>
</comp>

<comp id="265" class="1005" name="sha256hash_5_reg_265">
<pin_list>
<pin id="266" dir="0" index="0" bw="32" slack="1"/>
<pin id="267" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256hash_5 "/>
</bind>
</comp>

<comp id="270" class="1005" name="sha256hash_6_reg_270">
<pin_list>
<pin id="271" dir="0" index="0" bw="32" slack="1"/>
<pin id="272" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256hash_6 "/>
</bind>
</comp>

<comp id="275" class="1005" name="sha256hash_7_reg_275">
<pin_list>
<pin id="276" dir="0" index="0" bw="32" slack="1"/>
<pin id="277" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256hash_7 "/>
</bind>
</comp>

<comp id="280" class="1005" name="sha256_bits_0_reg_280">
<pin_list>
<pin id="281" dir="0" index="0" bw="32" slack="1"/>
<pin id="282" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="sha256_bits_0 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="71"><net_src comp="14" pin="0"/><net_sink comp="68" pin=0"/></net>

<net id="76"><net_src comp="12" pin="0"/><net_sink comp="72" pin=0"/></net>

<net id="77"><net_src comp="8" pin="0"/><net_sink comp="72" pin=1"/></net>

<net id="82"><net_src comp="12" pin="0"/><net_sink comp="78" pin=0"/></net>

<net id="83"><net_src comp="6" pin="0"/><net_sink comp="78" pin=1"/></net>

<net id="88"><net_src comp="12" pin="0"/><net_sink comp="84" pin=0"/></net>

<net id="89"><net_src comp="4" pin="0"/><net_sink comp="84" pin=1"/></net>

<net id="95"><net_src comp="50" pin="0"/><net_sink comp="90" pin=1"/></net>

<net id="101"><net_src comp="52" pin="0"/><net_sink comp="96" pin=1"/></net>

<net id="102"><net_src comp="90" pin="3"/><net_sink comp="96" pin=0"/></net>

<net id="106"><net_src comp="46" pin="0"/><net_sink comp="103" pin=0"/></net>

<net id="113"><net_src comp="103" pin="1"/><net_sink comp="107" pin=0"/></net>

<net id="132"><net_src comp="66" pin="0"/><net_sink comp="114" pin=0"/></net>

<net id="133"><net_src comp="2" pin="0"/><net_sink comp="114" pin=13"/></net>

<net id="134"><net_src comp="10" pin="0"/><net_sink comp="114" pin=15"/></net>

<net id="143"><net_src comp="64" pin="0"/><net_sink comp="135" pin=0"/></net>

<net id="144"><net_src comp="0" pin="0"/><net_sink comp="135" pin=2"/></net>

<net id="145"><net_src comp="10" pin="0"/><net_sink comp="135" pin=5"/></net>

<net id="150"><net_src comp="107" pin="4"/><net_sink comp="146" pin=0"/></net>

<net id="151"><net_src comp="48" pin="0"/><net_sink comp="146" pin=1"/></net>

<net id="155"><net_src comp="107" pin="4"/><net_sink comp="152" pin=0"/></net>

<net id="156"><net_src comp="152" pin="1"/><net_sink comp="90" pin=2"/></net>

<net id="161"><net_src comp="107" pin="4"/><net_sink comp="157" pin=0"/></net>

<net id="162"><net_src comp="54" pin="0"/><net_sink comp="157" pin=1"/></net>

<net id="166"><net_src comp="135" pin="6"/><net_sink comp="163" pin=0"/></net>

<net id="170"><net_src comp="135" pin="6"/><net_sink comp="167" pin=0"/></net>

<net id="174"><net_src comp="135" pin="6"/><net_sink comp="171" pin=0"/></net>

<net id="178"><net_src comp="135" pin="6"/><net_sink comp="175" pin=0"/></net>

<net id="182"><net_src comp="135" pin="6"/><net_sink comp="179" pin=0"/></net>

<net id="186"><net_src comp="135" pin="6"/><net_sink comp="183" pin=0"/></net>

<net id="190"><net_src comp="135" pin="6"/><net_sink comp="187" pin=0"/></net>

<net id="194"><net_src comp="135" pin="6"/><net_sink comp="191" pin=0"/></net>

<net id="198"><net_src comp="135" pin="6"/><net_sink comp="195" pin=0"/></net>

<net id="202"><net_src comp="135" pin="6"/><net_sink comp="199" pin=0"/></net>

<net id="206"><net_src comp="135" pin="6"/><net_sink comp="203" pin=0"/></net>

<net id="210"><net_src comp="72" pin="2"/><net_sink comp="207" pin=0"/></net>

<net id="211"><net_src comp="207" pin="1"/><net_sink comp="114" pin=14"/></net>

<net id="215"><net_src comp="78" pin="2"/><net_sink comp="212" pin=0"/></net>

<net id="216"><net_src comp="212" pin="1"/><net_sink comp="135" pin=4"/></net>

<net id="220"><net_src comp="84" pin="2"/><net_sink comp="217" pin=0"/></net>

<net id="221"><net_src comp="217" pin="1"/><net_sink comp="135" pin=3"/></net>

<net id="225"><net_src comp="146" pin="2"/><net_sink comp="222" pin=0"/></net>

<net id="226"><net_src comp="222" pin="1"/><net_sink comp="107" pin=2"/></net>

<net id="233"><net_src comp="163" pin="1"/><net_sink comp="230" pin=0"/></net>

<net id="234"><net_src comp="230" pin="1"/><net_sink comp="114" pin=11"/></net>

<net id="238"><net_src comp="167" pin="1"/><net_sink comp="235" pin=0"/></net>

<net id="239"><net_src comp="235" pin="1"/><net_sink comp="114" pin=12"/></net>

<net id="243"><net_src comp="171" pin="1"/><net_sink comp="240" pin=0"/></net>

<net id="244"><net_src comp="240" pin="1"/><net_sink comp="114" pin=2"/></net>

<net id="248"><net_src comp="175" pin="1"/><net_sink comp="245" pin=0"/></net>

<net id="249"><net_src comp="245" pin="1"/><net_sink comp="114" pin=3"/></net>

<net id="253"><net_src comp="179" pin="1"/><net_sink comp="250" pin=0"/></net>

<net id="254"><net_src comp="250" pin="1"/><net_sink comp="114" pin=4"/></net>

<net id="258"><net_src comp="183" pin="1"/><net_sink comp="255" pin=0"/></net>

<net id="259"><net_src comp="255" pin="1"/><net_sink comp="114" pin=5"/></net>

<net id="263"><net_src comp="187" pin="1"/><net_sink comp="260" pin=0"/></net>

<net id="264"><net_src comp="260" pin="1"/><net_sink comp="114" pin=6"/></net>

<net id="268"><net_src comp="191" pin="1"/><net_sink comp="265" pin=0"/></net>

<net id="269"><net_src comp="265" pin="1"/><net_sink comp="114" pin=7"/></net>

<net id="273"><net_src comp="195" pin="1"/><net_sink comp="270" pin=0"/></net>

<net id="274"><net_src comp="270" pin="1"/><net_sink comp="114" pin=8"/></net>

<net id="278"><net_src comp="199" pin="1"/><net_sink comp="275" pin=0"/></net>

<net id="279"><net_src comp="275" pin="1"/><net_sink comp="114" pin=9"/></net>

<net id="283"><net_src comp="203" pin="1"/><net_sink comp="280" pin=0"/></net>

<net id="284"><net_src comp="280" pin="1"/><net_sink comp="114" pin=10"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: OUTPUT_r | {6 7 }
 - Input state : 
	Port: sha256 : INPUT_r | {4 5 }
	Port: sha256 : msg | {1 }
	Port: sha256 : len | {1 }
	Port: sha256 : hash | {1 }
	Port: sha256 : K | {4 5 6 7 }
  - Chain level:
	State 1
	State 2
	State 3
		indvarinc : 1
		tmp : 1
		sha256_buf_addr : 2
		StgValue_29 : 3
		tmp_s : 1
		StgValue_33 : 2
	State 4
	State 5
		sha256_bits_1 : 1
		sha256_len_0 : 1
		sha256hash_0 : 1
		sha256hash_1 : 1
		sha256hash_2 : 1
		sha256hash_3 : 1
		sha256hash_4 : 1
		sha256hash_5 : 1
		sha256hash_6 : 1
		sha256hash_7 : 1
		sha256_bits_0 : 1
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------|---------|---------|---------|---------|
| Operation|     Functional Unit    |   BRAM  |  Delay  |    FF   |   LUT   |
|----------|------------------------|---------|---------|---------|---------|
|   call   | grp_sha256_done_fu_114 |    3    | 45.8052 |   2594  |   3545  |
|          | grp_sha256_hash_fu_135 |    2    |  30.622 |   2173  |   2366  |
|----------|------------------------|---------|---------|---------|---------|
|    add   |    indvarinc_fu_146    |    0    |    0    |    0    |    15   |
|----------|------------------------|---------|---------|---------|---------|
|   icmp   |      tmp_s_fu_157      |    0    |    0    |    0    |    11   |
|----------|------------------------|---------|---------|---------|---------|
|          |     grp_read_fu_72     |    0    |    0    |    0    |    0    |
|   read   |     grp_read_fu_78     |    0    |    0    |    0    |    0    |
|          |     grp_read_fu_84     |    0    |    0    |    0    |    0    |
|----------|------------------------|---------|---------|---------|---------|
|   zext   |       tmp_fu_152       |    0    |    0    |    0    |    0    |
|----------|------------------------|---------|---------|---------|---------|
|          |  sha256_bits_1_fu_163  |    0    |    0    |    0    |    0    |
|          |   sha256_len_0_fu_167  |    0    |    0    |    0    |    0    |
|          |   sha256hash_0_fu_171  |    0    |    0    |    0    |    0    |
|          |   sha256hash_1_fu_175  |    0    |    0    |    0    |    0    |
|          |   sha256hash_2_fu_179  |    0    |    0    |    0    |    0    |
|extractvalue|   sha256hash_3_fu_183  |    0    |    0    |    0    |    0    |
|          |   sha256hash_4_fu_187  |    0    |    0    |    0    |    0    |
|          |   sha256hash_5_fu_191  |    0    |    0    |    0    |    0    |
|          |   sha256hash_6_fu_195  |    0    |    0    |    0    |    0    |
|          |   sha256hash_7_fu_199  |    0    |    0    |    0    |    0    |
|          |  sha256_bits_0_fu_203  |    0    |    0    |    0    |    0    |
|----------|------------------------|---------|---------|---------|---------|
|   Total  |                        |    5    | 76.4272 |   4767  |   5937  |
|----------|------------------------|---------|---------|---------|---------|

Memories:
+----------+--------+--------+--------+
|          |  BRAM  |   FF   |   LUT  |
+----------+--------+--------+--------+
|     K    |    1   |    0   |    0   |
|sha256_buf|    1   |    0   |    0   |
+----------+--------+--------+--------+
|   Total  |    2   |    0   |    0   |
+----------+--------+--------+--------+

* Register list:
+---------------------+--------+
|                     |   FF   |
+---------------------+--------+
|  hash_read_reg_207  |   32   |
|  indvarinc_reg_222  |    6   |
|    invdar_reg_103   |    6   |
|   len_read_reg_212  |   32   |
|   msg_read_reg_217  |   32   |
|sha256_bits_0_reg_280|   32   |
|sha256_bits_1_reg_230|   32   |
| sha256_len_0_reg_235|   32   |
| sha256hash_0_reg_240|   32   |
| sha256hash_1_reg_245|   32   |
| sha256hash_2_reg_250|   32   |
| sha256hash_3_reg_255|   32   |
| sha256hash_4_reg_260|   32   |
| sha256hash_5_reg_265|   32   |
| sha256hash_6_reg_270|   32   |
| sha256hash_7_reg_275|   32   |
+---------------------+--------+
|        Total        |   460  |
+---------------------+--------+

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+--------+--------+
|           |  BRAM  |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    5   |   76   |  4767  |  5937  |
|   Memory  |    2   |    -   |    0   |    0   |
|Multiplexer|    -   |    -   |    -   |    -   |
|  Register |    -   |    -   |   460  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    7   |   76   |  5227  |  5937  |
+-----------+--------+--------+--------+--------+
