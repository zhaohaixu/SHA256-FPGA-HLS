

================================================================
== Vivado HLS Report for 'sha256_hash'
================================================================
* Date:           Sun Feb 21 21:04:22 2021

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        sha256_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-------+-----+-------+---------+
    |   Latency   |   Interval  | Pipeline|
    | min |  max  | min |  max  |   Type  |
    +-----+-------+-----+-------+---------+
    |    7|  12103|    7|  12103|   none  |
    +-----+-------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+-----+-------+----------+-----------+-----------+--------+----------+
        |                      |   Latency   | Iteration|  Initiation Interval  |  Trip  |          |
        |       Loop Name      | min |  max  |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------------------+-----+-------+----------+-----------+-----------+--------+----------+
        |- sha256_hash_label2  |    0|  12096|  3 ~ 189 |          -|          -| 0 ~ 64 |    no    |
        +----------------------+-----+-------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / (!exitcond)
9 --> 
	10  / (tmp_3)
	11  / (!tmp_3)
10 --> 
	11  / true
11 --> 
	8  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 8.75>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%sha256_len_0_write_s = alloca i32"   --->   Operation 12 'alloca' 'sha256_len_0_write_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%sha256_bits_0_read_s = alloca i32"   --->   Operation 13 'alloca' 'sha256_bits_0_read_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sha256hash_7 = alloca i32"   --->   Operation 14 'alloca' 'sha256hash_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sha256hash_6 = alloca i32"   --->   Operation 15 'alloca' 'sha256hash_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%sha256hash_5 = alloca i32"   --->   Operation 16 'alloca' 'sha256hash_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%sha256hash_4 = alloca i32"   --->   Operation 17 'alloca' 'sha256hash_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sha256hash_3 = alloca i32"   --->   Operation 18 'alloca' 'sha256hash_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sha256hash_2 = alloca i32"   --->   Operation 19 'alloca' 'sha256hash_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sha256hash_1 = alloca i32"   --->   Operation 20 'alloca' 'sha256hash_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sha256hash = alloca i32"   --->   Operation 21 'alloca' 'sha256hash' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%sha256_bits_1_read_s = alloca i32"   --->   Operation 22 'alloca' 'sha256_bits_1_read_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%len_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %len)" [src/sha256.c:150]   --->   Operation 23 'read' 'len_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%data_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %data_offset)" [src/sha256.c:150]   --->   Operation 24 'read' 'data_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp = sext i32 %data_offset_read to i64" [src/sha256.c:158]   --->   Operation 25 'sext' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%data_addr = getelementptr i8* %data, i64 %tmp" [src/sha256.c:158]   --->   Operation 26 'getelementptr' 'data_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [7/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %data_addr, i32 %len_read)" [src/sha256.c:158]   --->   Operation 27 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_1 : Operation 28 [1/1] (1.76ns)   --->   "store i32 0, i32* %sha256_bits_1_read_s"   --->   Operation 28 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 29 [1/1] (1.76ns)   --->   "store i32 1779033703, i32* %sha256hash"   --->   Operation 29 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 30 [1/1] (1.76ns)   --->   "store i32 -1150833019, i32* %sha256hash_1"   --->   Operation 30 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 31 [1/1] (1.76ns)   --->   "store i32 1013904242, i32* %sha256hash_2"   --->   Operation 31 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 32 [1/1] (1.76ns)   --->   "store i32 -1521486534, i32* %sha256hash_3"   --->   Operation 32 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 33 [1/1] (1.76ns)   --->   "store i32 1359893119, i32* %sha256hash_4"   --->   Operation 33 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 34 [1/1] (1.76ns)   --->   "store i32 -1694144372, i32* %sha256hash_5"   --->   Operation 34 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 35 [1/1] (1.76ns)   --->   "store i32 528734635, i32* %sha256hash_6"   --->   Operation 35 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 36 [1/1] (1.76ns)   --->   "store i32 1541459225, i32* %sha256hash_7"   --->   Operation 36 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 37 [1/1] (1.76ns)   --->   "store i32 0, i32* %sha256_bits_0_read_s"   --->   Operation 37 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 38 [1/1] (1.76ns)   --->   "store i32 0, i32* %sha256_len_0_write_s"   --->   Operation 38 'store' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 39 [6/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %data_addr, i32 %len_read)" [src/sha256.c:158]   --->   Operation 39 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 40 [5/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %data_addr, i32 %len_read)" [src/sha256.c:158]   --->   Operation 40 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 41 [4/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %data_addr, i32 %len_read)" [src/sha256.c:158]   --->   Operation 41 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 42 [3/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %data_addr, i32 %len_read)" [src/sha256.c:158]   --->   Operation 42 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 43 [2/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %data_addr, i32 %len_read)" [src/sha256.c:158]   --->   Operation 43 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %data, [6 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 900000, [6 x i8]* @p_str7, [6 x i8]* @p_str8, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 44 'specinterface' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 45 [1/7] (8.75ns)   --->   "%p_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %data_addr, i32 %len_read)" [src/sha256.c:158]   --->   Operation 45 'readreq' 'p_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 46 [1/1] (1.76ns)   --->   "br label %1" [src/sha256.c:156]   --->   Operation 46 'br' <Predicate = true> <Delay = 1.76>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 47 [1/1] (0.00ns)   --->   "%i = phi i32 [ 0, %0 ], [ %i_1, %._crit_edge ]"   --->   Operation 47 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 48 [1/1] (2.47ns)   --->   "%exitcond = icmp eq i32 %i, %len_read" [src/sha256.c:156]   --->   Operation 48 'icmp' 'exitcond' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 49 [1/1] (2.55ns)   --->   "%i_1 = add i32 %i, 1" [src/sha256.c:156]   --->   Operation 49 'add' 'i_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %4, label %2" [src/sha256.c:156]   --->   Operation 50 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 51 [1/1] (8.75ns)   --->   "%data_addr_read = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %data_addr)" [src/sha256.c:158]   --->   Operation 51 'read' 'data_addr_read' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "%sha256_len_0_write_2 = load i32* %sha256_len_0_write_s" [src/sha256.c:167]   --->   Operation 52 'load' 'sha256_len_0_write_2' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 53 [1/1] (0.00ns)   --->   "%sha256_bits_0_read_2 = load i32* %sha256_bits_0_read_s" [src/sha256.c:167]   --->   Operation 53 'load' 'sha256_bits_0_read_2' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 54 [1/1] (0.00ns)   --->   "%sha256hash_7_load = load i32* %sha256hash_7" [src/sha256.c:167]   --->   Operation 54 'load' 'sha256hash_7_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 55 [1/1] (0.00ns)   --->   "%sha256hash_6_load = load i32* %sha256hash_6" [src/sha256.c:167]   --->   Operation 55 'load' 'sha256hash_6_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 56 [1/1] (0.00ns)   --->   "%sha256hash_5_load = load i32* %sha256hash_5" [src/sha256.c:167]   --->   Operation 56 'load' 'sha256hash_5_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "%sha256hash_4_load = load i32* %sha256hash_4" [src/sha256.c:167]   --->   Operation 57 'load' 'sha256hash_4_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 58 [1/1] (0.00ns)   --->   "%sha256hash_3_load = load i32* %sha256hash_3" [src/sha256.c:167]   --->   Operation 58 'load' 'sha256hash_3_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 59 [1/1] (0.00ns)   --->   "%sha256hash_2_load = load i32* %sha256hash_2" [src/sha256.c:167]   --->   Operation 59 'load' 'sha256hash_2_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 60 [1/1] (0.00ns)   --->   "%sha256hash_1_load = load i32* %sha256hash_1" [src/sha256.c:167]   --->   Operation 60 'load' 'sha256hash_1_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 61 [1/1] (0.00ns)   --->   "%sha256hash_load = load i32* %sha256hash" [src/sha256.c:167]   --->   Operation 61 'load' 'sha256hash_load' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 62 [1/1] (0.00ns)   --->   "%sha256_bits_1_read_2 = load i32* %sha256_bits_1_read_s" [src/sha256.c:167]   --->   Operation 62 'load' 'sha256_bits_1_read_2' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 63 [1/1] (0.00ns)   --->   "%mrv_s = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } undef, i32 %sha256_len_0_write_2, 0" [src/sha256.c:167]   --->   Operation 63 'insertvalue' 'mrv_s' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 64 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_s, i32 %sha256_bits_1_read_2, 1" [src/sha256.c:167]   --->   Operation 64 'insertvalue' 'mrv_1' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 65 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_1, i32 %sha256hash_load, 2" [src/sha256.c:167]   --->   Operation 65 'insertvalue' 'mrv_2' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 66 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_2, i32 %sha256hash_1_load, 3" [src/sha256.c:167]   --->   Operation 66 'insertvalue' 'mrv_3' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 67 [1/1] (0.00ns)   --->   "%mrv_4 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_3, i32 %sha256hash_2_load, 4" [src/sha256.c:167]   --->   Operation 67 'insertvalue' 'mrv_4' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 68 [1/1] (0.00ns)   --->   "%mrv_5 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_4, i32 %sha256hash_3_load, 5" [src/sha256.c:167]   --->   Operation 68 'insertvalue' 'mrv_5' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 69 [1/1] (0.00ns)   --->   "%mrv_6 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_5, i32 %sha256hash_4_load, 6" [src/sha256.c:167]   --->   Operation 69 'insertvalue' 'mrv_6' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 70 [1/1] (0.00ns)   --->   "%mrv_7 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_6, i32 %sha256hash_5_load, 7" [src/sha256.c:167]   --->   Operation 70 'insertvalue' 'mrv_7' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 71 [1/1] (0.00ns)   --->   "%mrv_8 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_7, i32 %sha256hash_6_load, 8" [src/sha256.c:167]   --->   Operation 71 'insertvalue' 'mrv_8' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 72 [1/1] (0.00ns)   --->   "%mrv_9 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_8, i32 %sha256hash_7_load, 9" [src/sha256.c:167]   --->   Operation 72 'insertvalue' 'mrv_9' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 73 [1/1] (0.00ns)   --->   "%mrv_10 = insertvalue { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_9, i32 %sha256_bits_0_read_2, 10" [src/sha256.c:167]   --->   Operation 73 'insertvalue' 'mrv_10' <Predicate = (exitcond)> <Delay = 0.00>
ST_8 : Operation 74 [1/1] (0.00ns)   --->   "ret { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 } %mrv_10" [src/sha256.c:167]   --->   Operation 74 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 5.02>
ST_9 : Operation 75 [1/1] (0.00ns)   --->   "%sha256_len_0_write_1 = load i32* %sha256_len_0_write_s" [src/sha256.c:159]   --->   Operation 75 'load' 'sha256_len_0_write_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 76 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([19 x i8]* @p_str) nounwind" [src/sha256.c:156]   --->   Operation 76 'specloopname' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([19 x i8]* @p_str)" [src/sha256.c:156]   --->   Operation 77 'specregionbegin' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 64, i32 32, [1 x i8]* @p_str1) nounwind" [src/sha256.c:157]   --->   Operation 78 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_1 = zext i32 %sha256_len_0_write_1 to i64" [src/sha256.c:158]   --->   Operation 79 'zext' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 80 [1/1] (0.00ns)   --->   "%sha256_buf_addr = getelementptr [64 x i8]* %sha256_buf, i64 0, i64 %tmp_1" [src/sha256.c:158]   --->   Operation 80 'getelementptr' 'sha256_buf_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 81 [1/1] (2.32ns)   --->   "store i8 %data_addr_read, i8* %sha256_buf_addr, align 1" [src/sha256.c:158]   --->   Operation 81 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_9 : Operation 82 [1/1] (2.55ns)   --->   "%sl = add i32 %sha256_len_0_write_1, 1" [src/sha256.c:159]   --->   Operation 82 'add' 'sl' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 83 [1/1] (2.47ns)   --->   "%tmp_3 = icmp eq i32 %sl, 8" [src/sha256.c:160]   --->   Operation 83 'icmp' 'tmp_3' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 84 [1/1] (0.00ns)   --->   "br i1 %tmp_3, label %3, label %.._crit_edge_crit_edge" [src/sha256.c:160]   --->   Operation 84 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 85 [1/1] (1.76ns)   --->   "store i32 %sl, i32* %sha256_len_0_write_s" [src/sha256.c:159]   --->   Operation 85 'store' <Predicate = (!tmp_3)> <Delay = 1.76>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "br label %._crit_edge" [src/sha256.c:160]   --->   Operation 86 'br' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (1.76ns)   --->   "store i32 0, i32* %sha256_len_0_write_s"   --->   Operation 87 'store' <Predicate = (tmp_3)> <Delay = 1.76>

State 10 <SV = 9> <Delay = 1.76>
ST_10 : Operation 88 [1/1] (0.00ns)   --->   "%sha256hash_7_load_1 = load i32* %sha256hash_7" [src/sha256.c:161]   --->   Operation 88 'load' 'sha256hash_7_load_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 89 [1/1] (0.00ns)   --->   "%sha256hash_6_load_1 = load i32* %sha256hash_6" [src/sha256.c:161]   --->   Operation 89 'load' 'sha256hash_6_load_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 90 [1/1] (0.00ns)   --->   "%sha256hash_5_load_1 = load i32* %sha256hash_5" [src/sha256.c:161]   --->   Operation 90 'load' 'sha256hash_5_load_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 91 [1/1] (0.00ns)   --->   "%sha256hash_4_load_1 = load i32* %sha256hash_4" [src/sha256.c:161]   --->   Operation 91 'load' 'sha256hash_4_load_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 92 [1/1] (0.00ns)   --->   "%sha256hash_3_load_1 = load i32* %sha256hash_3" [src/sha256.c:161]   --->   Operation 92 'load' 'sha256hash_3_load_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 93 [1/1] (0.00ns)   --->   "%sha256hash_2_load_1 = load i32* %sha256hash_2" [src/sha256.c:161]   --->   Operation 93 'load' 'sha256hash_2_load_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 94 [1/1] (0.00ns)   --->   "%sha256hash_1_load_1 = load i32* %sha256hash_1" [src/sha256.c:161]   --->   Operation 94 'load' 'sha256hash_1_load_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%sha256hash_load_1 = load i32* %sha256hash" [src/sha256.c:161]   --->   Operation 95 'load' 'sha256hash_load_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 96 [2/2] (1.76ns)   --->   "%p_hash_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @_hash([64 x i8]* %sha256_buf, i32 %sha256hash_load_1, i32 %sha256hash_1_load_1, i32 %sha256hash_2_load_1, i32 %sha256hash_3_load_1, i32 %sha256hash_4_load_1, i32 %sha256hash_5_load_1, i32 %sha256hash_6_load_1, i32 %sha256hash_7_load_1)" [src/sha256.c:161]   --->   Operation 96 'call' 'p_hash_ret' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 5.01>
ST_11 : Operation 97 [1/1] (0.00ns)   --->   "%sha256_bits_0_read_1 = load i32* %sha256_bits_0_read_s" [src/sha256.c:71->src/sha256.c:162]   --->   Operation 97 'load' 'sha256_bits_0_read_1' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 98 [1/1] (0.00ns)   --->   "%sha256_bits_1_read_1 = load i32* %sha256_bits_1_read_s" [src/sha256.c:70->src/sha256.c:162]   --->   Operation 98 'load' 'sha256_bits_1_read_1' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 99 [1/2] (2.55ns)   --->   "%p_hash_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @_hash([64 x i8]* %sha256_buf, i32 %sha256hash_load_1, i32 %sha256hash_1_load_1, i32 %sha256hash_2_load_1, i32 %sha256hash_3_load_1, i32 %sha256hash_4_load_1, i32 %sha256hash_5_load_1, i32 %sha256hash_6_load_1, i32 %sha256hash_7_load_1)" [src/sha256.c:161]   --->   Operation 99 'call' 'p_hash_ret' <Predicate = (tmp_3)> <Delay = 2.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 100 [1/1] (0.00ns)   --->   "%sha256hash_0_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %p_hash_ret, 0" [src/sha256.c:161]   --->   Operation 100 'extractvalue' 'sha256hash_0_ret' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 101 [1/1] (0.00ns)   --->   "%sha256hash_1_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %p_hash_ret, 1" [src/sha256.c:161]   --->   Operation 101 'extractvalue' 'sha256hash_1_ret' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 102 [1/1] (0.00ns)   --->   "%sha256hash_2_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %p_hash_ret, 2" [src/sha256.c:161]   --->   Operation 102 'extractvalue' 'sha256hash_2_ret' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 103 [1/1] (0.00ns)   --->   "%sha256hash_3_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %p_hash_ret, 3" [src/sha256.c:161]   --->   Operation 103 'extractvalue' 'sha256hash_3_ret' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 104 [1/1] (0.00ns)   --->   "%sha256hash_4_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %p_hash_ret, 4" [src/sha256.c:161]   --->   Operation 104 'extractvalue' 'sha256hash_4_ret' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 105 [1/1] (0.00ns)   --->   "%sha256hash_5_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %p_hash_ret, 5" [src/sha256.c:161]   --->   Operation 105 'extractvalue' 'sha256hash_5_ret' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 106 [1/1] (0.00ns)   --->   "%sha256hash_6_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %p_hash_ret, 6" [src/sha256.c:161]   --->   Operation 106 'extractvalue' 'sha256hash_6_ret' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "%sha256hash_7_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %p_hash_ret, 7" [src/sha256.c:161]   --->   Operation 107 'extractvalue' 'sha256hash_7_ret' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (2.47ns)   --->   "%tmp_i = icmp ugt i32 %sha256_bits_0_read_1, -65" [src/sha256.c:69->src/sha256.c:162]   --->   Operation 108 'icmp' 'tmp_i' <Predicate = (tmp_3)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 109 [1/1] (2.55ns)   --->   "%tmp_89_i = add i32 %sha256_bits_1_read_1, 1" [src/sha256.c:70->src/sha256.c:162]   --->   Operation 109 'add' 'tmp_89_i' <Predicate = (tmp_3)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 110 [1/1] (0.69ns)   --->   "%tmp_95_read1_i = select i1 %tmp_i, i32 %tmp_89_i, i32 %sha256_bits_1_read_1" [src/sha256.c:69->src/sha256.c:162]   --->   Operation 110 'select' 'tmp_95_read1_i' <Predicate = (tmp_3)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 111 [1/1] (2.55ns)   --->   "%sha256_bits_0_write = add i32 %sha256_bits_0_read_1, 64" [src/sha256.c:71->src/sha256.c:162]   --->   Operation 111 'add' 'sha256_bits_0_write' <Predicate = (tmp_3)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 112 [1/1] (1.76ns)   --->   "store i32 %tmp_95_read1_i, i32* %sha256_bits_1_read_s" [src/sha256.c:69->src/sha256.c:162]   --->   Operation 112 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 113 [1/1] (1.76ns)   --->   "store i32 %sha256hash_0_ret, i32* %sha256hash" [src/sha256.c:161]   --->   Operation 113 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 114 [1/1] (1.76ns)   --->   "store i32 %sha256hash_1_ret, i32* %sha256hash_1" [src/sha256.c:161]   --->   Operation 114 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 115 [1/1] (1.76ns)   --->   "store i32 %sha256hash_2_ret, i32* %sha256hash_2" [src/sha256.c:161]   --->   Operation 115 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 116 [1/1] (1.76ns)   --->   "store i32 %sha256hash_3_ret, i32* %sha256hash_3" [src/sha256.c:161]   --->   Operation 116 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 117 [1/1] (1.76ns)   --->   "store i32 %sha256hash_4_ret, i32* %sha256hash_4" [src/sha256.c:161]   --->   Operation 117 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 118 [1/1] (1.76ns)   --->   "store i32 %sha256hash_5_ret, i32* %sha256hash_5" [src/sha256.c:161]   --->   Operation 118 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 119 [1/1] (1.76ns)   --->   "store i32 %sha256hash_6_ret, i32* %sha256hash_6" [src/sha256.c:161]   --->   Operation 119 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 120 [1/1] (1.76ns)   --->   "store i32 %sha256hash_7_ret, i32* %sha256hash_7" [src/sha256.c:161]   --->   Operation 120 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 121 [1/1] (1.76ns)   --->   "store i32 %sha256_bits_0_write, i32* %sha256_bits_0_read_s" [src/sha256.c:67->src/sha256.c:162]   --->   Operation 121 'store' <Predicate = (tmp_3)> <Delay = 1.76>
ST_11 : Operation 122 [1/1] (0.00ns)   --->   "br label %._crit_edge" [src/sha256.c:164]   --->   Operation 122 'br' <Predicate = (tmp_3)> <Delay = 0.00>
ST_11 : Operation 123 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([19 x i8]* @p_str, i32 %tmp_2)" [src/sha256.c:165]   --->   Operation 123 'specregionend' 'empty' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 124 [1/1] (0.00ns)   --->   "br label %1" [src/sha256.c:156]   --->   Operation 124 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 8.75ns
The critical path consists of the following:
	wire read on port 'len' (src/sha256.c:150) [18]  (0 ns)
	bus request on port 'data' (src/sha256.c:158) [22]  (8.75 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (src/sha256.c:158) [22]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (src/sha256.c:158) [22]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (src/sha256.c:158) [22]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (src/sha256.c:158) [22]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (src/sha256.c:158) [22]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'data' (src/sha256.c:158) [22]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus read on port 'data' (src/sha256.c:158) [45]  (8.75 ns)

 <State 9>: 5.03ns
The critical path consists of the following:
	'load' operation ('sha256_len_0_write_1', src/sha256.c:159) on local variable 'sha256_len[0]' [41]  (0 ns)
	'add' operation ('sl', src/sha256.c:159) [49]  (2.55 ns)
	'icmp' operation ('tmp_3', src/sha256.c:160) [50]  (2.47 ns)

 <State 10>: 1.77ns
The critical path consists of the following:
	'load' operation ('sha256hash_7_load_1', src/sha256.c:161) on local variable 'sha256hash_7' [57]  (0 ns)
	'call' operation ('p_hash_ret', src/sha256.c:161) to '_hash' [66]  (1.77 ns)

 <State 11>: 5.02ns
The critical path consists of the following:
	'load' operation ('sha256_bits_1_read_1', src/sha256.c:70->src/sha256.c:162) on local variable 'sha256_bits[1]' [65]  (0 ns)
	'add' operation ('tmp_89_i', src/sha256.c:70->src/sha256.c:162) [76]  (2.55 ns)
	'select' operation ('tmp_95_read1_i', src/sha256.c:69->src/sha256.c:162) [77]  (0.698 ns)
	'store' operation (src/sha256.c:69->src/sha256.c:162) of variable 'tmp_95_read1_i', src/sha256.c:69->src/sha256.c:162 on local variable 'sha256_bits[1]' [79]  (1.77 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
